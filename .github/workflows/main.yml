name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.14f1
          - 2020.1.13f1

        # No dots allowed in secret names, so we need to have this mapping
        include:
          - unityVersion: 2019.4.14f1
            licenseSecret: UNITY_LICENSE_2019
          - unityVersion: 2020.1.13f1
            licenseSecret: UNITY_LICENSE_2020

    steps:
      - uses: actions/checkout@v2

      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{github.repository_owner}}

      - name: Cache
        uses: actions/cache@v2.1.2
        with:
          path: Library
          key: Library-${{ matrix.unityVersion }}

      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets[matrix.licenseSecret] }}
        with: 
          unityVersion: ${{ matrix.unityVersion }}
          customParameters: -enableCodeCoverage
            -coverageResultsPath "artifacts/CodeCoverage/"
            -coverageOptions assemblyFilters:+Responsible,+Responsible.Editor
            -nographics
            -disable-assembly-updater
      
      - name: Push to testspace
        if: ${{ always() }}
        run: testspace
          [${{ matrix.unityVersion }}]artifacts/editmode-results.xml
          [${{ matrix.unityVersion }}]artifacts/playmode-results.xml

      - name: Push to codecov.io
        uses: codecov/codecov-action@v1
        if: matrix.unityVersion == '2019.4.14f1'
        with:
          files: |
            artifacts/CodeCoverage/workspace-opencov/EditMode/TestCoverageResults_0000.xml,
            artifacts/CodeCoverage/workspace-opencov/PlayMode/TestCoverageResults_0000.xml
          fail_ci_if_error: true
          verbose: true

      - name: Archive test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2.2.0 
        with:
          name: Test Results ${{ matrix.unityVersion }}
          path: artifacts

  markdown:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: gaurav-nelson/github-action-markdown-link-check@v1

  inspectcode:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2
      
      - name: Cache Library
        uses: actions/cache@v2.1.2
        with:
          path: Library
          key: Library-resharper

      - name: Run ReSharper in Unity
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2019 }}
        with: 
          customImage: thesbergen/unityci-resharper
          targetPlatform: StandaloneLinux64
          buildMethod: Responsible.EditorSetup.ContinuousIntegration.InspectCode
          customParameters: -disable-assembly-updater

      - name: Archive ReSharper run
        if: ${{ always() }}
        uses: actions/upload-artifact@v2.2.0 
        with:
          name: ReSharper
          path: |
            resharper/inspect.xml
            resharper/stdout.txt
            resharper/stderr.txt

      - name: ReSharper XML -> GitHub output
        if: ${{ always() }}
        uses: glassechidna/resharper-action@v1
        with:
          report: resharper/inspect.xml

  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache Library
        uses: actions/cache@v2.1.2
        with:
          path: Library
          key: Library-docfx

      - name: Generate docs
        uses: game-ci/unity-builder@v2
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE_2019 }}
        with: 
          customImage: thesbergen/unityci-docfx
          targetPlatform: StandaloneLinux64
          buildMethod: Responsible.EditorSetup.ContinuousIntegration.BuildDocumentation
          customParameters: -disable-assembly-updater

      - name: Archive docs
        uses: actions/upload-artifact@v2.2.0 
        with:
          name: Docs
          path: docfx/docs_site

      - name: Deploy docs
        uses: JamesIves/github-pages-deploy-action@4.1.0
        with:
          branch: gh-pages
          folder: docfx/docs_site
          dry-run: ${{ github.ref != 'refs/heads/main' }}

  version-info:
    runs-on: ubuntu-latest

    outputs:
      old-version: ${{ parse-tag-version.outputs.version }}
      new-version: ${{ package-version.outputs.prop }}
      changelog-body: ${{ changelog.outputs.changes }}
      tag-name: ${{ create-tag-name.outputs.tag }}

    steps:
      - name: Get previous tag
        id: previous-tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1.0.1"

      - name: Parse version from tag
        id: parse-tag-version
        run: |
          tag=$(echo ${{ steps.previous-tag.outputs.tag }})
          echo "::set-output name=version::${tag:1}"

      - name: Read current package version
        id: package-version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: Packages/Responsible/package.json
          prop_path: 'version'

      - name: Get latest changelog entry
        id: changelog
        uses: mindsers/changelog-reader-action@v2

      - name: Output status
        run: |
          echo "Previous version from tags: ${{ parse-tag-version.outputs.version }}"
          echo "Current version from package.json: ${{ package-version.outputs.prop }}"
          echo "Current version from CHANGELOG.md: ${{ changelog.outputs.version }}"

      - name: 'Check that changelog is up to date with package.json'
        run: [ ${{ currentVersion.outputs.prop }} = ${{ changelog.outputs.version }} ]

      - name: Create tag name
        id: create-tag-name
        run: echo "::set-output name=tag::v${{ package-version.outputs.prop }}"

  release:
    runs-on: ubuntu-latest
    name: Create Release
    needs: [ version-info, docs ]
    if: |
      github.ref == 'refs/heads/main' &&
      needs.version-info.outputs.new-version != needs.version-info.outputs.old-version

    steps:
      - uses: actions/download-artifact@v2
        name: Download Docs
        with:
          name: Docs

      - uses: softprops/action-gh-release@v1
        with:
          body: ${{ needs.version-info.outputs.changelog-body }}
          tag_name: ${{ needs.version-info.outputs.tag-name }}
          files: Docs.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    

        

        
