name: Checks

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test-unity:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2019.4.14f1
          - 2020.3.1f1

        # No dots allowed in secret names, so we need to have this mapping
        include:
          - unityVersion: 2019.4.14f1
            licenseSecret: UNITY_LICENSE_2019
          - unityVersion: 2020.3.1f1
            licenseSecret: UNITY_LICENSE_2020

    steps:
      - uses: actions/checkout@v3

      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{github.repository_owner}}

      - name: Cache
        uses: actions/cache@v3
        with:
          path: ResponsibleUnity/Library
          key: Library-${{ matrix.unityVersion }}-${{ hashFiles('com.beatwaves.responsible/**', 'ResponsibleUnity/**') }}
          restore-keys: |
            Library-${{ matrix.unityVersion }}
            Library-

      - name: Run tests
        id: tests
        uses: game-ci/unity-test-runner@v2
        env:
          UNITY_LICENSE: ${{ secrets[matrix.licenseSecret] }}
        with:
          projectPath: ResponsibleUnity
          unityVersion: ${{ matrix.unityVersion }}
          customParameters: -enableCodeCoverage
            -coverageResultsPath "../artifacts/CodeCoverage/"
            -coverageOptions assemblyFilters:+Responsible,+Responsible.Editor
            -debugCodeOptimization
            -nographics
            -disable-assembly-updater

      - name: Push to testspace
        if: ${{ always() }}
        run: testspace
          [${{ matrix.unityVersion }}]artifacts/editmode-results.xml
          [${{ matrix.unityVersion }}]artifacts/playmode-results.xml

      - name: Push to codecov.io
        if: ${{ always() }}
        uses: codecov/codecov-action@v3
        with:
          flags: Unity${{ matrix.unityVersion }}
          files: "artifacts/CodeCoverage/ResponsibleUnity-opencov/EditMode/TestCoverageResults_0000.xml,\
            artifacts/CodeCoverage/ResponsibleUnity-opencov/PlayMode/TestCoverageResults_0000.xml"
          fail_ci_if_error: true

      - name: Archive test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: Unity Test Results ${{ matrix.unityVersion }}
          path: artifacts

  test-netstandard:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    strategy:
          fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - uses: testspace-com/setup-testspace@v1
        with:
          domain: ${{github.repository_owner}}

      - name: Run Tests
        id: run-tests
        run: dotnet test --collect:"XPlat Code Coverage" -r TestResults --settings runsettings.xml --logger "trx"

      - name: Push to testspace
        if: ${{ always() }}
        run: testspace ${{ steps.run-tests.outputs.tests }}

      - name: Push to codecov.io
        uses: codecov/codecov-action@v3
        if: ${{ always() }}
        with:
          flags: netstandard
          fail_ci_if_error: true

      - name: Archive test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: netstandard Test Results
          path: Responsible/TestResults

  test-mutation-core:
    uses: ./.github/workflows/stryker.yml
    with:
      working-directory : src/Responsible.Tests
    secrets:
      STRYKER_KEY: ${{ secrets.STRYKER_KEY }}

  test-mutation-gherkin:
    uses: ./.github/workflows/stryker.yml
    with:
      working-directory: src/ResponsibleGherkin.Tests
    secrets:
      STRYKER_KEY: ${{ secrets.STRYKER_KEY }}

  inspectcode:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: src

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'

      - name: dotnet restore
        run: |
          dotnet restore
          dotnet tool restore

      - name: Run ReSharper
        run: ./inspectcode.sh

      - name: Archive ReSharper run
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: ReSharper
          path: src/inspect.xml

      - name: ReSharper XML -> GitHub output
        if: ${{ always() }}
        uses: glassechidna/resharper-action@v1
        with:
          report: src/inspect.xml
