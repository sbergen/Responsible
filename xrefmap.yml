### YamlMime:XRefMap
sorted: true
references:
- uid: Responsible
  name: Responsible
  href: api/Responsible.html
  commentId: N:Responsible
  fullName: Responsible
  nameWithType: Responsible
- uid: Responsible.Bdd
  name: Responsible.Bdd
  href: api/Responsible.Bdd.html
  commentId: N:Responsible.Bdd
  fullName: Responsible.Bdd
  nameWithType: Responsible.Bdd
- uid: Responsible.Bdd.IBddStep
  name: IBddStep
  href: api/Responsible.Bdd.IBddStep.html
  commentId: T:Responsible.Bdd.IBddStep
  fullName: Responsible.Bdd.IBddStep
  nameWithType: IBddStep
- uid: Responsible.Bdd.Keywords
  name: Keywords
  href: api/Responsible.Bdd.Keywords.html
  commentId: T:Responsible.Bdd.Keywords
  fullName: Responsible.Bdd.Keywords
  nameWithType: Keywords
- uid: Responsible.Bdd.Keywords.And(System.String,Responsible.ITestInstruction{System.Object})
  name: And(string, ITestInstruction<object>)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_And_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Bdd.Keywords.And(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: And(String, ITestInstruction(Of Object))
  fullName: Responsible.Bdd.Keywords.And(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Bdd.Keywords.And(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Keywords.And(string, ITestInstruction<object>)
  nameWithType.vb: Keywords.And(String, ITestInstruction(Of Object))
- uid: Responsible.Bdd.Keywords.And*
  name: And
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_And_
  commentId: Overload:Responsible.Bdd.Keywords.And
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.And
  nameWithType: Keywords.And
- uid: Responsible.Bdd.Keywords.But(System.String,Responsible.ITestInstruction{System.Object})
  name: But(string, ITestInstruction<object>)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_But_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Bdd.Keywords.But(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: But(String, ITestInstruction(Of Object))
  fullName: Responsible.Bdd.Keywords.But(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Bdd.Keywords.But(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Keywords.But(string, ITestInstruction<object>)
  nameWithType.vb: Keywords.But(String, ITestInstruction(Of Object))
- uid: Responsible.Bdd.Keywords.But*
  name: But
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_But_
  commentId: Overload:Responsible.Bdd.Keywords.But
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.But
  nameWithType: Keywords.But
- uid: Responsible.Bdd.Keywords.Given(System.String,Responsible.ITestInstruction{System.Object})
  name: Given(string, ITestInstruction<object>)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Given_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Bdd.Keywords.Given(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: Given(String, ITestInstruction(Of Object))
  fullName: Responsible.Bdd.Keywords.Given(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Bdd.Keywords.Given(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Keywords.Given(string, ITestInstruction<object>)
  nameWithType.vb: Keywords.Given(String, ITestInstruction(Of Object))
- uid: Responsible.Bdd.Keywords.Given*
  name: Given
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Given_
  commentId: Overload:Responsible.Bdd.Keywords.Given
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.Given
  nameWithType: Keywords.Given
- uid: Responsible.Bdd.Keywords.Pending
  name: Pending
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Pending
  commentId: F:Responsible.Bdd.Keywords.Pending
  fullName: Responsible.Bdd.Keywords.Pending
  nameWithType: Keywords.Pending
- uid: Responsible.Bdd.Keywords.Scenario(System.String,System.String,System.String,System.Int32)
  name: Scenario(string, string, string, int)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Scenario_System_String_System_String_System_String_System_Int32_
  commentId: M:Responsible.Bdd.Keywords.Scenario(System.String,System.String,System.String,System.Int32)
  name.vb: Scenario(String, String, String, Integer)
  fullName: Responsible.Bdd.Keywords.Scenario(string, string, string, int)
  fullName.vb: Responsible.Bdd.Keywords.Scenario(String, String, String, Integer)
  nameWithType: Keywords.Scenario(string, string, string, int)
  nameWithType.vb: Keywords.Scenario(String, String, String, Integer)
- uid: Responsible.Bdd.Keywords.Scenario*
  name: Scenario
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Scenario_
  commentId: Overload:Responsible.Bdd.Keywords.Scenario
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.Scenario
  nameWithType: Keywords.Scenario
- uid: Responsible.Bdd.Keywords.Then(System.String,Responsible.ITestInstruction{System.Object})
  name: Then(string, ITestInstruction<object>)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Then_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Bdd.Keywords.Then(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: Then(String, ITestInstruction(Of Object))
  fullName: Responsible.Bdd.Keywords.Then(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Bdd.Keywords.Then(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Keywords.Then(string, ITestInstruction<object>)
  nameWithType.vb: Keywords.Then(String, ITestInstruction(Of Object))
- uid: Responsible.Bdd.Keywords.Then*
  name: Then
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_Then_
  commentId: Overload:Responsible.Bdd.Keywords.Then
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.Then
  nameWithType: Keywords.Then
- uid: Responsible.Bdd.Keywords.When(System.String,Responsible.ITestInstruction{System.Object})
  name: When(string, ITestInstruction<object>)
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_When_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Bdd.Keywords.When(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: When(String, ITestInstruction(Of Object))
  fullName: Responsible.Bdd.Keywords.When(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Bdd.Keywords.When(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Keywords.When(string, ITestInstruction<object>)
  nameWithType.vb: Keywords.When(String, ITestInstruction(Of Object))
- uid: Responsible.Bdd.Keywords.When*
  name: When
  href: api/Responsible.Bdd.Keywords.html#Responsible_Bdd_Keywords_When_
  commentId: Overload:Responsible.Bdd.Keywords.When
  isSpec: "True"
  fullName: Responsible.Bdd.Keywords.When
  nameWithType: Keywords.When
- uid: Responsible.Bdd.ScenarioBuilder
  name: ScenarioBuilder
  href: api/Responsible.Bdd.ScenarioBuilder.html
  commentId: T:Responsible.Bdd.ScenarioBuilder
  fullName: Responsible.Bdd.ScenarioBuilder
  nameWithType: ScenarioBuilder
- uid: Responsible.Bdd.ScenarioBuilder.WithSteps(Responsible.Bdd.IBddStep[])
  name: WithSteps(params IBddStep[])
  href: api/Responsible.Bdd.ScenarioBuilder.html#Responsible_Bdd_ScenarioBuilder_WithSteps_Responsible_Bdd_IBddStep___
  commentId: M:Responsible.Bdd.ScenarioBuilder.WithSteps(Responsible.Bdd.IBddStep[])
  name.vb: WithSteps(ParamArray IBddStep())
  fullName: Responsible.Bdd.ScenarioBuilder.WithSteps(params Responsible.Bdd.IBddStep[])
  fullName.vb: Responsible.Bdd.ScenarioBuilder.WithSteps(ParamArray Responsible.Bdd.IBddStep())
  nameWithType: ScenarioBuilder.WithSteps(params IBddStep[])
  nameWithType.vb: ScenarioBuilder.WithSteps(ParamArray IBddStep())
- uid: Responsible.Bdd.ScenarioBuilder.WithSteps*
  name: WithSteps
  href: api/Responsible.Bdd.ScenarioBuilder.html#Responsible_Bdd_ScenarioBuilder_WithSteps_
  commentId: Overload:Responsible.Bdd.ScenarioBuilder.WithSteps
  isSpec: "True"
  fullName: Responsible.Bdd.ScenarioBuilder.WithSteps
  nameWithType: ScenarioBuilder.WithSteps
- uid: Responsible.BddExtensions
  name: BddExtensions
  href: api/Responsible.BddExtensions.html
  commentId: T:Responsible.BddExtensions
  fullName: Responsible.BddExtensions
  nameWithType: BddExtensions
- uid: Responsible.BddExtensions.RunScenario(Responsible.TestInstructionExecutor,Responsible.Bdd.ScenarioBuilder,Responsible.Bdd.IBddStep[])
  name: RunScenario(TestInstructionExecutor, ScenarioBuilder, params IBddStep[])
  href: api/Responsible.BddExtensions.html#Responsible_BddExtensions_RunScenario_Responsible_TestInstructionExecutor_Responsible_Bdd_ScenarioBuilder_Responsible_Bdd_IBddStep___
  commentId: M:Responsible.BddExtensions.RunScenario(Responsible.TestInstructionExecutor,Responsible.Bdd.ScenarioBuilder,Responsible.Bdd.IBddStep[])
  name.vb: RunScenario(TestInstructionExecutor, ScenarioBuilder, ParamArray IBddStep())
  fullName: Responsible.BddExtensions.RunScenario(Responsible.TestInstructionExecutor, Responsible.Bdd.ScenarioBuilder, params Responsible.Bdd.IBddStep[])
  fullName.vb: Responsible.BddExtensions.RunScenario(Responsible.TestInstructionExecutor, Responsible.Bdd.ScenarioBuilder, ParamArray Responsible.Bdd.IBddStep())
  nameWithType: BddExtensions.RunScenario(TestInstructionExecutor, ScenarioBuilder, params IBddStep[])
  nameWithType.vb: BddExtensions.RunScenario(TestInstructionExecutor, ScenarioBuilder, ParamArray IBddStep())
- uid: Responsible.BddExtensions.RunScenario*
  name: RunScenario
  href: api/Responsible.BddExtensions.html#Responsible_BddExtensions_RunScenario_
  commentId: Overload:Responsible.BddExtensions.RunScenario
  isSpec: "True"
  fullName: Responsible.BddExtensions.RunScenario
  nameWithType: BddExtensions.RunScenario
- uid: Responsible.Context
  name: Responsible.Context
  href: api/Responsible.Context.html
  commentId: N:Responsible.Context
  fullName: Responsible.Context
  nameWithType: Responsible.Context
- uid: Responsible.Context.RunContext
  name: RunContext
  href: api/Responsible.Context.RunContext.html
  commentId: T:Responsible.Context.RunContext
  fullName: Responsible.Context.RunContext
  nameWithType: RunContext
- uid: Responsible.Docs
  name: Responsible.Docs
  href: api/Responsible.Docs.html
  commentId: N:Responsible.Docs
  fullName: Responsible.Docs
  nameWithType: Responsible.Docs
- uid: Responsible.Docs.Inherit
  name: Inherit
  href: api/Responsible.Docs.Inherit.html
  commentId: T:Responsible.Docs.Inherit
  fullName: Responsible.Docs.Inherit
  nameWithType: Inherit
- uid: Responsible.Docs.Inherit.BddKeyword(System.String,Responsible.ITestInstruction{System.Object})
  name: BddKeyword(string, ITestInstruction<object>)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_BddKeyword_System_String_Responsible_ITestInstruction_System_Object__
  commentId: M:Responsible.Docs.Inherit.BddKeyword(System.String,Responsible.ITestInstruction{System.Object})
  name.vb: BddKeyword(String, ITestInstruction(Of Object))
  fullName: Responsible.Docs.Inherit.BddKeyword(string, Responsible.ITestInstruction<object>)
  fullName.vb: Responsible.Docs.Inherit.BddKeyword(String, Responsible.ITestInstruction(Of Object))
  nameWithType: Inherit.BddKeyword(string, ITestInstruction<object>)
  nameWithType.vb: Inherit.BddKeyword(String, ITestInstruction(Of Object))
- uid: Responsible.Docs.Inherit.BddKeyword*
  name: BddKeyword
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_BddKeyword_
  commentId: Overload:Responsible.Docs.Inherit.BddKeyword
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.BddKeyword
  nameWithType: Inherit.BddKeyword
- uid: Responsible.Docs.Inherit.CallerMember*
  name: CallerMember
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMember_
  commentId: Overload:Responsible.Docs.Inherit.CallerMember
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.CallerMember
  nameWithType: Inherit.CallerMember
- uid: Responsible.Docs.Inherit.CallerMemberWithDescription*
  name: CallerMemberWithDescription
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithDescription_
  commentId: Overload:Responsible.Docs.Inherit.CallerMemberWithDescription
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.CallerMemberWithDescription
  nameWithType: Inherit.CallerMemberWithDescription
- uid: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext*
  name: CallerMemberWithDescriptionAndContext
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithDescriptionAndContext_
  commentId: Overload:Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext
  nameWithType: Inherit.CallerMemberWithDescriptionAndContext
- uid: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext``1(System.String,``0,System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name: CallerMemberWithDescriptionAndContext<T>(string, T, Action<StateStringBuilder>, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithDescriptionAndContext__1_System_String___0_System_Action_Responsible_State_StateStringBuilder__System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext``1(System.String,``0,System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name.vb: CallerMemberWithDescriptionAndContext(Of T)(String, T, Action(Of StateStringBuilder), String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext<T>(string, T, System.Action<Responsible.State.StateStringBuilder>, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext(Of T)(String, T, System.Action(Of Responsible.State.StateStringBuilder), String, String, Integer)
  nameWithType: Inherit.CallerMemberWithDescriptionAndContext<T>(string, T, Action<StateStringBuilder>, string, string, int)
  nameWithType.vb: Inherit.CallerMemberWithDescriptionAndContext(Of T)(String, T, Action(Of StateStringBuilder), String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext``2(System.String,``0,``1,System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name: CallerMemberWithDescriptionAndContext<T1, T2>(string, T1, T2, Action<StateStringBuilder>, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithDescriptionAndContext__2_System_String___0___1_System_Action_Responsible_State_StateStringBuilder__System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext``2(System.String,``0,``1,System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name.vb: CallerMemberWithDescriptionAndContext(Of T1, T2)(String, T1, T2, Action(Of StateStringBuilder), String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext<T1, T2>(string, T1, T2, System.Action<Responsible.State.StateStringBuilder>, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMemberWithDescriptionAndContext(Of T1, T2)(String, T1, T2, System.Action(Of Responsible.State.StateStringBuilder), String, String, Integer)
  nameWithType: Inherit.CallerMemberWithDescriptionAndContext<T1, T2>(string, T1, T2, Action<StateStringBuilder>, string, string, int)
  nameWithType.vb: Inherit.CallerMemberWithDescriptionAndContext(Of T1, T2)(String, T1, T2, Action(Of StateStringBuilder), String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMemberWithDescription``1(System.String,``0,System.String,System.String,System.Int32)
  name: CallerMemberWithDescription<T>(string, T, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithDescription__1_System_String___0_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMemberWithDescription``1(System.String,``0,System.String,System.String,System.Int32)
  name.vb: CallerMemberWithDescription(Of T)(String, T, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMemberWithDescription<T>(string, T, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMemberWithDescription(Of T)(String, T, String, String, Integer)
  nameWithType: Inherit.CallerMemberWithDescription<T>(string, T, string, string, int)
  nameWithType.vb: Inherit.CallerMemberWithDescription(Of T)(String, T, String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMemberWithExecutor*
  name: CallerMemberWithExecutor
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithExecutor_
  commentId: Overload:Responsible.Docs.Inherit.CallerMemberWithExecutor
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.CallerMemberWithExecutor
  nameWithType: Inherit.CallerMemberWithExecutor
- uid: Responsible.Docs.Inherit.CallerMemberWithExecutor``1(``0,Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: CallerMemberWithExecutor<T>(T, TestInstructionExecutor, CancellationToken, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMemberWithExecutor__1___0_Responsible_TestInstructionExecutor_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMemberWithExecutor``1(``0,Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: CallerMemberWithExecutor(Of T)(T, TestInstructionExecutor, CancellationToken, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMemberWithExecutor<T>(T, Responsible.TestInstructionExecutor, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMemberWithExecutor(Of T)(T, Responsible.TestInstructionExecutor, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: Inherit.CallerMemberWithExecutor<T>(T, TestInstructionExecutor, CancellationToken, string, string, int)
  nameWithType.vb: Inherit.CallerMemberWithExecutor(Of T)(T, TestInstructionExecutor, CancellationToken, String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMember``1(``0,System.String,System.String,System.Int32)
  name: CallerMember<T>(T, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMember__1___0_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMember``1(``0,System.String,System.String,System.Int32)
  name.vb: CallerMember(Of T)(T, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMember<T>(T, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMember(Of T)(T, String, String, Integer)
  nameWithType: Inherit.CallerMember<T>(T, string, string, int)
  nameWithType.vb: Inherit.CallerMember(Of T)(T, String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMember``2(``0,``1,System.String,System.String,System.Int32)
  name: CallerMember<T1, T2>(T1, T2, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMember__2___0___1_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMember``2(``0,``1,System.String,System.String,System.Int32)
  name.vb: CallerMember(Of T1, T2)(T1, T2, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMember<T1, T2>(T1, T2, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMember(Of T1, T2)(T1, T2, String, String, Integer)
  nameWithType: Inherit.CallerMember<T1, T2>(T1, T2, string, string, int)
  nameWithType.vb: Inherit.CallerMember(Of T1, T2)(T1, T2, String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMember``3(``0,``1,``2,System.String,System.String,System.Int32)
  name: CallerMember<T1, T2, T3>(T1, T2, T3, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMember__3___0___1___2_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMember``3(``0,``1,``2,System.String,System.String,System.Int32)
  name.vb: CallerMember(Of T1, T2, T3)(T1, T2, T3, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMember<T1, T2, T3>(T1, T2, T3, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMember(Of T1, T2, T3)(T1, T2, T3, String, String, Integer)
  nameWithType: Inherit.CallerMember<T1, T2, T3>(T1, T2, T3, string, string, int)
  nameWithType.vb: Inherit.CallerMember(Of T1, T2, T3)(T1, T2, T3, String, String, Integer)
- uid: Responsible.Docs.Inherit.CallerMember``4(``0,``1,``2,``3,System.String,System.String,System.Int32)
  name: CallerMember<T1, T2, T3, T4>(T1, T2, T3, T4, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_CallerMember__4___0___1___2___3_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.CallerMember``4(``0,``1,``2,``3,System.String,System.String,System.Int32)
  name.vb: CallerMember(Of T1, T2, T3, T4)(T1, T2, T3, T4, String, String, Integer)
  fullName: Responsible.Docs.Inherit.CallerMember<T1, T2, T3, T4>(T1, T2, T3, T4, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.CallerMember(Of T1, T2, T3, T4)(T1, T2, T3, T4, String, String, Integer)
  nameWithType: Inherit.CallerMember<T1, T2, T3, T4>(T1, T2, T3, T4, string, string, int)
  nameWithType.vb: Inherit.CallerMember(Of T1, T2, T3, T4)(T1, T2, T3, T4, String, String, Integer)
- uid: Responsible.Docs.Inherit.YieldInstruction*
  name: YieldInstruction
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_YieldInstruction_
  commentId: Overload:Responsible.Docs.Inherit.YieldInstruction
  isSpec: "True"
  fullName: Responsible.Docs.Inherit.YieldInstruction
  nameWithType: Inherit.YieldInstruction
- uid: Responsible.Docs.Inherit.YieldInstruction``1(``0,Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: YieldInstruction<T>(T, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  href: api/Responsible.Docs.Inherit.html#Responsible_Docs_Inherit_YieldInstruction__1___0_Responsible_TestInstructionExecutor_System_Boolean_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.Docs.Inherit.YieldInstruction``1(``0,Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: YieldInstruction(Of T)(T, TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
  fullName: Responsible.Docs.Inherit.YieldInstruction<T>(T, Responsible.TestInstructionExecutor, bool, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.Docs.Inherit.YieldInstruction(Of T)(T, Responsible.TestInstructionExecutor, Boolean, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: Inherit.YieldInstruction<T>(T, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  nameWithType.vb: Inherit.YieldInstruction(Of T)(T, TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
- uid: Responsible.IExternalResultSource
  name: IExternalResultSource
  href: api/Responsible.IExternalResultSource.html
  commentId: T:Responsible.IExternalResultSource
  fullName: Responsible.IExternalResultSource
  nameWithType: IExternalResultSource
- uid: Responsible.IExternalResultSource.GetExternalResult*
  name: GetExternalResult
  href: api/Responsible.IExternalResultSource.html#Responsible_IExternalResultSource_GetExternalResult_
  commentId: Overload:Responsible.IExternalResultSource.GetExternalResult
  isSpec: "True"
  fullName: Responsible.IExternalResultSource.GetExternalResult
  nameWithType: IExternalResultSource.GetExternalResult
- uid: Responsible.IExternalResultSource.GetExternalResult``1(System.Threading.CancellationToken)
  name: GetExternalResult<T>(CancellationToken)
  href: api/Responsible.IExternalResultSource.html#Responsible_IExternalResultSource_GetExternalResult__1_System_Threading_CancellationToken_
  commentId: M:Responsible.IExternalResultSource.GetExternalResult``1(System.Threading.CancellationToken)
  name.vb: GetExternalResult(Of T)(CancellationToken)
  fullName: Responsible.IExternalResultSource.GetExternalResult<T>(System.Threading.CancellationToken)
  fullName.vb: Responsible.IExternalResultSource.GetExternalResult(Of T)(System.Threading.CancellationToken)
  nameWithType: IExternalResultSource.GetExternalResult<T>(CancellationToken)
  nameWithType.vb: IExternalResultSource.GetExternalResult(Of T)(CancellationToken)
- uid: Responsible.IFailureListener
  name: IFailureListener
  href: api/Responsible.IFailureListener.html
  commentId: T:Responsible.IFailureListener
  fullName: Responsible.IFailureListener
  nameWithType: IFailureListener
- uid: Responsible.IFailureListener.OperationFailed(System.Exception,System.String)
  name: OperationFailed(Exception, string)
  href: api/Responsible.IFailureListener.html#Responsible_IFailureListener_OperationFailed_System_Exception_System_String_
  commentId: M:Responsible.IFailureListener.OperationFailed(System.Exception,System.String)
  name.vb: OperationFailed(Exception, String)
  fullName: Responsible.IFailureListener.OperationFailed(System.Exception, string)
  fullName.vb: Responsible.IFailureListener.OperationFailed(System.Exception, String)
  nameWithType: IFailureListener.OperationFailed(Exception, string)
  nameWithType.vb: IFailureListener.OperationFailed(Exception, String)
- uid: Responsible.IFailureListener.OperationFailed*
  name: OperationFailed
  href: api/Responsible.IFailureListener.html#Responsible_IFailureListener_OperationFailed_
  commentId: Overload:Responsible.IFailureListener.OperationFailed
  isSpec: "True"
  fullName: Responsible.IFailureListener.OperationFailed
  nameWithType: IFailureListener.OperationFailed
- uid: Responsible.IGlobalContextProvider
  name: IGlobalContextProvider
  href: api/Responsible.IGlobalContextProvider.html
  commentId: T:Responsible.IGlobalContextProvider
  fullName: Responsible.IGlobalContextProvider
  nameWithType: IGlobalContextProvider
- uid: Responsible.IGlobalContextProvider.BuildGlobalContext(Responsible.State.StateStringBuilder)
  name: BuildGlobalContext(StateStringBuilder)
  href: api/Responsible.IGlobalContextProvider.html#Responsible_IGlobalContextProvider_BuildGlobalContext_Responsible_State_StateStringBuilder_
  commentId: M:Responsible.IGlobalContextProvider.BuildGlobalContext(Responsible.State.StateStringBuilder)
  fullName: Responsible.IGlobalContextProvider.BuildGlobalContext(Responsible.State.StateStringBuilder)
  nameWithType: IGlobalContextProvider.BuildGlobalContext(StateStringBuilder)
- uid: Responsible.IGlobalContextProvider.BuildGlobalContext*
  name: BuildGlobalContext
  href: api/Responsible.IGlobalContextProvider.html#Responsible_IGlobalContextProvider_BuildGlobalContext_
  commentId: Overload:Responsible.IGlobalContextProvider.BuildGlobalContext
  isSpec: "True"
  fullName: Responsible.IGlobalContextProvider.BuildGlobalContext
  nameWithType: IGlobalContextProvider.BuildGlobalContext
- uid: Responsible.IOptionalTestResponder
  name: IOptionalTestResponder
  href: api/Responsible.IOptionalTestResponder.html
  commentId: T:Responsible.IOptionalTestResponder
  fullName: Responsible.IOptionalTestResponder
  nameWithType: IOptionalTestResponder
- uid: Responsible.ITestInstruction`1
  name: ITestInstruction<T>
  href: api/Responsible.ITestInstruction-1.html
  commentId: T:Responsible.ITestInstruction`1
  name.vb: ITestInstruction(Of T)
  fullName: Responsible.ITestInstruction<T>
  fullName.vb: Responsible.ITestInstruction(Of T)
  nameWithType: ITestInstruction<T>
  nameWithType.vb: ITestInstruction(Of T)
- uid: Responsible.ITestOperation`1
  name: ITestOperation<T>
  href: api/Responsible.ITestOperation-1.html
  commentId: T:Responsible.ITestOperation`1
  name.vb: ITestOperation(Of T)
  fullName: Responsible.ITestOperation<T>
  fullName.vb: Responsible.ITestOperation(Of T)
  nameWithType: ITestOperation<T>
  nameWithType.vb: ITestOperation(Of T)
- uid: Responsible.ITestOperation`1.CreateState
  name: CreateState()
  href: api/Responsible.ITestOperation-1.html#Responsible_ITestOperation_1_CreateState
  commentId: M:Responsible.ITestOperation`1.CreateState
  fullName: Responsible.ITestOperation<T>.CreateState()
  fullName.vb: Responsible.ITestOperation(Of T).CreateState()
  nameWithType: ITestOperation<T>.CreateState()
  nameWithType.vb: ITestOperation(Of T).CreateState()
- uid: Responsible.ITestOperation`1.CreateState*
  name: CreateState
  href: api/Responsible.ITestOperation-1.html#Responsible_ITestOperation_1_CreateState_
  commentId: Overload:Responsible.ITestOperation`1.CreateState
  isSpec: "True"
  fullName: Responsible.ITestOperation<T>.CreateState
  fullName.vb: Responsible.ITestOperation(Of T).CreateState
  nameWithType: ITestOperation<T>.CreateState
  nameWithType.vb: ITestOperation(Of T).CreateState
- uid: Responsible.ITestResponder`1
  name: ITestResponder<T>
  href: api/Responsible.ITestResponder-1.html
  commentId: T:Responsible.ITestResponder`1
  name.vb: ITestResponder(Of T)
  fullName: Responsible.ITestResponder<T>
  fullName.vb: Responsible.ITestResponder(Of T)
  nameWithType: ITestResponder<T>
  nameWithType.vb: ITestResponder(Of T)
- uid: Responsible.ITestScheduler
  name: ITestScheduler
  href: api/Responsible.ITestScheduler.html
  commentId: T:Responsible.ITestScheduler
  fullName: Responsible.ITestScheduler
  nameWithType: ITestScheduler
- uid: Responsible.ITestScheduler.FrameNow
  name: FrameNow
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_FrameNow
  commentId: P:Responsible.ITestScheduler.FrameNow
  fullName: Responsible.ITestScheduler.FrameNow
  nameWithType: ITestScheduler.FrameNow
- uid: Responsible.ITestScheduler.FrameNow*
  name: FrameNow
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_FrameNow_
  commentId: Overload:Responsible.ITestScheduler.FrameNow
  isSpec: "True"
  fullName: Responsible.ITestScheduler.FrameNow
  nameWithType: ITestScheduler.FrameNow
- uid: Responsible.ITestScheduler.RegisterPollCallback(System.Action)
  name: RegisterPollCallback(Action)
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_RegisterPollCallback_System_Action_
  commentId: M:Responsible.ITestScheduler.RegisterPollCallback(System.Action)
  fullName: Responsible.ITestScheduler.RegisterPollCallback(System.Action)
  nameWithType: ITestScheduler.RegisterPollCallback(Action)
- uid: Responsible.ITestScheduler.RegisterPollCallback*
  name: RegisterPollCallback
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_RegisterPollCallback_
  commentId: Overload:Responsible.ITestScheduler.RegisterPollCallback
  isSpec: "True"
  fullName: Responsible.ITestScheduler.RegisterPollCallback
  nameWithType: ITestScheduler.RegisterPollCallback
- uid: Responsible.ITestScheduler.TimeNow
  name: TimeNow
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_TimeNow
  commentId: P:Responsible.ITestScheduler.TimeNow
  fullName: Responsible.ITestScheduler.TimeNow
  nameWithType: ITestScheduler.TimeNow
- uid: Responsible.ITestScheduler.TimeNow*
  name: TimeNow
  href: api/Responsible.ITestScheduler.html#Responsible_ITestScheduler_TimeNow_
  commentId: Overload:Responsible.ITestScheduler.TimeNow
  isSpec: "True"
  fullName: Responsible.ITestScheduler.TimeNow
  nameWithType: ITestScheduler.TimeNow
- uid: Responsible.ITestWaitCondition`1
  name: ITestWaitCondition<T>
  href: api/Responsible.ITestWaitCondition-1.html
  commentId: T:Responsible.ITestWaitCondition`1
  name.vb: ITestWaitCondition(Of T)
  fullName: Responsible.ITestWaitCondition<T>
  fullName.vb: Responsible.ITestWaitCondition(Of T)
  nameWithType: ITestWaitCondition<T>
  nameWithType.vb: ITestWaitCondition(Of T)
- uid: Responsible.LinqSupport
  name: LinqSupport
  href: api/Responsible.LinqSupport.html
  commentId: T:Responsible.LinqSupport
  fullName: Responsible.LinqSupport
  nameWithType: LinqSupport
- uid: Responsible.LinqSupport.SelectMany*
  name: SelectMany
  href: api/Responsible.LinqSupport.html#Responsible_LinqSupport_SelectMany_
  commentId: Overload:Responsible.LinqSupport.SelectMany
  isSpec: "True"
  fullName: Responsible.LinqSupport.SelectMany
  nameWithType: LinqSupport.SelectMany
- uid: Responsible.LinqSupport.SelectMany``3(Responsible.ITestInstruction{``0},System.Func{``0,Responsible.ITestInstruction{``1}},System.Func{``0,``1,``2})
  name: SelectMany<TSource, TSelector, TResult>(ITestInstruction<TSource>, Func<TSource, ITestInstruction<TSelector>>, Func<TSource, TSelector, TResult>)
  href: api/Responsible.LinqSupport.html#Responsible_LinqSupport_SelectMany__3_Responsible_ITestInstruction___0__System_Func___0_Responsible_ITestInstruction___1___System_Func___0___1___2__
  commentId: M:Responsible.LinqSupport.SelectMany``3(Responsible.ITestInstruction{``0},System.Func{``0,Responsible.ITestInstruction{``1}},System.Func{``0,``1,``2})
  name.vb: SelectMany(Of TSource, TSelector, TResult)(ITestInstruction(Of TSource), Func(Of TSource, ITestInstruction(Of TSelector)), Func(Of TSource, TSelector, TResult))
  fullName: Responsible.LinqSupport.SelectMany<TSource, TSelector, TResult>(Responsible.ITestInstruction<TSource>, System.Func<TSource, Responsible.ITestInstruction<TSelector>>, System.Func<TSource, TSelector, TResult>)
  fullName.vb: Responsible.LinqSupport.SelectMany(Of TSource, TSelector, TResult)(Responsible.ITestInstruction(Of TSource), System.Func(Of TSource, Responsible.ITestInstruction(Of TSelector)), System.Func(Of TSource, TSelector, TResult))
  nameWithType: LinqSupport.SelectMany<TSource, TSelector, TResult>(ITestInstruction<TSource>, Func<TSource, ITestInstruction<TSelector>>, Func<TSource, TSelector, TResult>)
  nameWithType.vb: LinqSupport.SelectMany(Of TSource, TSelector, TResult)(ITestInstruction(Of TSource), Func(Of TSource, ITestInstruction(Of TSelector)), Func(Of TSource, TSelector, TResult))
- uid: Responsible.OptionalTestResponder
  name: OptionalTestResponder
  href: api/Responsible.OptionalTestResponder.html
  commentId: T:Responsible.OptionalTestResponder
  fullName: Responsible.OptionalTestResponder
  nameWithType: OptionalTestResponder
- uid: Responsible.OptionalTestResponder.Until*
  name: Until
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_Until_
  commentId: Overload:Responsible.OptionalTestResponder.Until
  isSpec: "True"
  fullName: Responsible.OptionalTestResponder.Until
  nameWithType: OptionalTestResponder.Until
- uid: Responsible.OptionalTestResponder.UntilCompleted*
  name: UntilCompleted
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_UntilCompleted_
  commentId: Overload:Responsible.OptionalTestResponder.UntilCompleted
  isSpec: "True"
  fullName: Responsible.OptionalTestResponder.UntilCompleted
  nameWithType: OptionalTestResponder.UntilCompleted
- uid: Responsible.OptionalTestResponder.UntilCompleted``1(Responsible.IOptionalTestResponder,Responsible.ITestInstruction{``0},System.String,System.String,System.Int32)
  name: UntilCompleted<T>(IOptionalTestResponder, ITestInstruction<T>, string, string, int)
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_UntilCompleted__1_Responsible_IOptionalTestResponder_Responsible_ITestInstruction___0__System_String_System_String_System_Int32_
  commentId: M:Responsible.OptionalTestResponder.UntilCompleted``1(Responsible.IOptionalTestResponder,Responsible.ITestInstruction{``0},System.String,System.String,System.Int32)
  name.vb: UntilCompleted(Of T)(IOptionalTestResponder, ITestInstruction(Of T), String, String, Integer)
  fullName: Responsible.OptionalTestResponder.UntilCompleted<T>(Responsible.IOptionalTestResponder, Responsible.ITestInstruction<T>, string, string, int)
  fullName.vb: Responsible.OptionalTestResponder.UntilCompleted(Of T)(Responsible.IOptionalTestResponder, Responsible.ITestInstruction(Of T), String, String, Integer)
  nameWithType: OptionalTestResponder.UntilCompleted<T>(IOptionalTestResponder, ITestInstruction<T>, string, string, int)
  nameWithType.vb: OptionalTestResponder.UntilCompleted(Of T)(IOptionalTestResponder, ITestInstruction(Of T), String, String, Integer)
- uid: Responsible.OptionalTestResponder.UntilReadyTo*
  name: UntilReadyTo
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_UntilReadyTo_
  commentId: Overload:Responsible.OptionalTestResponder.UntilReadyTo
  isSpec: "True"
  fullName: Responsible.OptionalTestResponder.UntilReadyTo
  nameWithType: OptionalTestResponder.UntilReadyTo
- uid: Responsible.OptionalTestResponder.UntilReadyTo``1(Responsible.IOptionalTestResponder,Responsible.ITestResponder{``0},System.String,System.String,System.Int32)
  name: UntilReadyTo<T>(IOptionalTestResponder, ITestResponder<T>, string, string, int)
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_UntilReadyTo__1_Responsible_IOptionalTestResponder_Responsible_ITestResponder___0__System_String_System_String_System_Int32_
  commentId: M:Responsible.OptionalTestResponder.UntilReadyTo``1(Responsible.IOptionalTestResponder,Responsible.ITestResponder{``0},System.String,System.String,System.Int32)
  name.vb: UntilReadyTo(Of T)(IOptionalTestResponder, ITestResponder(Of T), String, String, Integer)
  fullName: Responsible.OptionalTestResponder.UntilReadyTo<T>(Responsible.IOptionalTestResponder, Responsible.ITestResponder<T>, string, string, int)
  fullName.vb: Responsible.OptionalTestResponder.UntilReadyTo(Of T)(Responsible.IOptionalTestResponder, Responsible.ITestResponder(Of T), String, String, Integer)
  nameWithType: OptionalTestResponder.UntilReadyTo<T>(IOptionalTestResponder, ITestResponder<T>, string, string, int)
  nameWithType.vb: OptionalTestResponder.UntilReadyTo(Of T)(IOptionalTestResponder, ITestResponder(Of T), String, String, Integer)
- uid: Responsible.OptionalTestResponder.Until``1(Responsible.IOptionalTestResponder,Responsible.ITestWaitCondition{``0},System.String,System.String,System.Int32)
  name: Until<T>(IOptionalTestResponder, ITestWaitCondition<T>, string, string, int)
  href: api/Responsible.OptionalTestResponder.html#Responsible_OptionalTestResponder_Until__1_Responsible_IOptionalTestResponder_Responsible_ITestWaitCondition___0__System_String_System_String_System_Int32_
  commentId: M:Responsible.OptionalTestResponder.Until``1(Responsible.IOptionalTestResponder,Responsible.ITestWaitCondition{``0},System.String,System.String,System.Int32)
  name.vb: Until(Of T)(IOptionalTestResponder, ITestWaitCondition(Of T), String, String, Integer)
  fullName: Responsible.OptionalTestResponder.Until<T>(Responsible.IOptionalTestResponder, Responsible.ITestWaitCondition<T>, string, string, int)
  fullName.vb: Responsible.OptionalTestResponder.Until(Of T)(Responsible.IOptionalTestResponder, Responsible.ITestWaitCondition(Of T), String, String, Integer)
  nameWithType: OptionalTestResponder.Until<T>(IOptionalTestResponder, ITestWaitCondition<T>, string, string, int)
  nameWithType.vb: OptionalTestResponder.Until(Of T)(IOptionalTestResponder, ITestWaitCondition(Of T), String, String, Integer)
- uid: Responsible.RepetitionLimitExceededException
  name: RepetitionLimitExceededException
  href: api/Responsible.RepetitionLimitExceededException.html
  commentId: T:Responsible.RepetitionLimitExceededException
  fullName: Responsible.RepetitionLimitExceededException
  nameWithType: RepetitionLimitExceededException
- uid: Responsible.Responsibly
  name: Responsibly
  href: api/Responsible.Responsibly.html
  commentId: T:Responsible.Responsibly
  fullName: Responsible.Responsibly
  nameWithType: Responsibly
- uid: Responsible.Responsibly.Do(System.String,System.Action,System.String,System.String,System.Int32)
  name: Do(string, Action, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_Do_System_String_System_Action_System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.Do(System.String,System.Action,System.String,System.String,System.Int32)
  name.vb: Do(String, Action, String, String, Integer)
  fullName: Responsible.Responsibly.Do(string, System.Action, string, string, int)
  fullName.vb: Responsible.Responsibly.Do(String, System.Action, String, String, Integer)
  nameWithType: Responsibly.Do(string, Action, string, string, int)
  nameWithType.vb: Responsibly.Do(String, Action, String, String, Integer)
- uid: Responsible.Responsibly.Do*
  name: Do
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_Do_
  commentId: Overload:Responsible.Responsibly.Do
  isSpec: "True"
  fullName: Responsible.Responsibly.Do
  nameWithType: Responsibly.Do
- uid: Responsible.Responsibly.DoAndReturn*
  name: DoAndReturn
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_DoAndReturn_
  commentId: Overload:Responsible.Responsibly.DoAndReturn
  isSpec: "True"
  fullName: Responsible.Responsibly.DoAndReturn
  nameWithType: Responsibly.DoAndReturn
- uid: Responsible.Responsibly.DoAndReturn``1(System.String,System.Func{``0},System.String,System.String,System.Int32)
  name: DoAndReturn<T>(string, Func<T>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_DoAndReturn__1_System_String_System_Func___0__System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.DoAndReturn``1(System.String,System.Func{``0},System.String,System.String,System.Int32)
  name.vb: DoAndReturn(Of T)(String, Func(Of T), String, String, Integer)
  fullName: Responsible.Responsibly.DoAndReturn<T>(string, System.Func<T>, string, string, int)
  fullName.vb: Responsible.Responsibly.DoAndReturn(Of T)(String, System.Func(Of T), String, String, Integer)
  nameWithType: Responsibly.DoAndReturn<T>(string, Func<T>, string, string, int)
  nameWithType.vb: Responsibly.DoAndReturn(Of T)(String, Func(Of T), String, String, Integer)
- uid: Responsible.Responsibly.RespondToAllOf*
  name: RespondToAllOf
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_RespondToAllOf_
  commentId: Overload:Responsible.Responsibly.RespondToAllOf
  isSpec: "True"
  fullName: Responsible.Responsibly.RespondToAllOf
  nameWithType: Responsibly.RespondToAllOf
- uid: Responsible.Responsibly.RespondToAllOf``1(Responsible.ITestResponder{``0}[])
  name: RespondToAllOf<T>(params ITestResponder<T>[])
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_RespondToAllOf__1_Responsible_ITestResponder___0____
  commentId: M:Responsible.Responsibly.RespondToAllOf``1(Responsible.ITestResponder{``0}[])
  name.vb: RespondToAllOf(Of T)(ParamArray ITestResponder(Of T)())
  fullName: Responsible.Responsibly.RespondToAllOf<T>(params Responsible.ITestResponder<T>[])
  fullName.vb: Responsible.Responsibly.RespondToAllOf(Of T)(ParamArray Responsible.ITestResponder(Of T)())
  nameWithType: Responsibly.RespondToAllOf<T>(params ITestResponder<T>[])
  nameWithType.vb: Responsibly.RespondToAllOf(Of T)(ParamArray ITestResponder(Of T)())
- uid: Responsible.Responsibly.RespondToAnyOf*
  name: RespondToAnyOf
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_RespondToAnyOf_
  commentId: Overload:Responsible.Responsibly.RespondToAnyOf
  isSpec: "True"
  fullName: Responsible.Responsibly.RespondToAnyOf
  nameWithType: Responsibly.RespondToAnyOf
- uid: Responsible.Responsibly.RespondToAnyOf``1(Responsible.ITestResponder{``0}[])
  name: RespondToAnyOf<T>(params ITestResponder<T>[])
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_RespondToAnyOf__1_Responsible_ITestResponder___0____
  commentId: M:Responsible.Responsibly.RespondToAnyOf``1(Responsible.ITestResponder{``0}[])
  name.vb: RespondToAnyOf(Of T)(ParamArray ITestResponder(Of T)())
  fullName: Responsible.Responsibly.RespondToAnyOf<T>(params Responsible.ITestResponder<T>[])
  fullName.vb: Responsible.Responsibly.RespondToAnyOf(Of T)(ParamArray Responsible.ITestResponder(Of T)())
  nameWithType: Responsibly.RespondToAnyOf<T>(params ITestResponder<T>[])
  nameWithType.vb: Responsibly.RespondToAnyOf(Of T)(ParamArray ITestResponder(Of T)())
- uid: Responsible.Responsibly.Return*
  name: Return
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_Return_
  commentId: Overload:Responsible.Responsibly.Return
  isSpec: "True"
  fullName: Responsible.Responsibly.Return
  nameWithType: Responsibly.Return
- uid: Responsible.Responsibly.Return``1(``0,System.String,System.String,System.Int32)
  name: Return<T>(T, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_Return__1___0_System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.Return``1(``0,System.String,System.String,System.Int32)
  name.vb: Return(Of T)(T, String, String, Integer)
  fullName: Responsible.Responsibly.Return<T>(T, string, string, int)
  fullName.vb: Responsible.Responsibly.Return(Of T)(T, String, String, Integer)
  nameWithType: Responsibly.Return<T>(T, string, string, int)
  nameWithType.vb: Responsibly.Return(Of T)(T, String, String, Integer)
- uid: Responsible.Responsibly.WaitForAllOf*
  name: WaitForAllOf
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForAllOf_
  commentId: Overload:Responsible.Responsibly.WaitForAllOf
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForAllOf
  nameWithType: Responsibly.WaitForAllOf
- uid: Responsible.Responsibly.WaitForAllOf``1(Responsible.ITestWaitCondition{``0}[])
  name: WaitForAllOf<T>(params ITestWaitCondition<T>[])
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForAllOf__1_Responsible_ITestWaitCondition___0____
  commentId: M:Responsible.Responsibly.WaitForAllOf``1(Responsible.ITestWaitCondition{``0}[])
  name.vb: WaitForAllOf(Of T)(ParamArray ITestWaitCondition(Of T)())
  fullName: Responsible.Responsibly.WaitForAllOf<T>(params Responsible.ITestWaitCondition<T>[])
  fullName.vb: Responsible.Responsibly.WaitForAllOf(Of T)(ParamArray Responsible.ITestWaitCondition(Of T)())
  nameWithType: Responsibly.WaitForAllOf<T>(params ITestWaitCondition<T>[])
  nameWithType.vb: Responsibly.WaitForAllOf(Of T)(ParamArray ITestWaitCondition(Of T)())
- uid: Responsible.Responsibly.WaitForCondition(System.String,System.Func{System.Boolean},System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name: WaitForCondition(string, Func<bool>, Action<StateStringBuilder>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCondition_System_String_System_Func_System_Boolean__System_Action_Responsible_State_StateStringBuilder__System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForCondition(System.String,System.Func{System.Boolean},System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name.vb: WaitForCondition(String, Func(Of Boolean), Action(Of StateStringBuilder), String, String, Integer)
  fullName: Responsible.Responsibly.WaitForCondition(string, System.Func<bool>, System.Action<Responsible.State.StateStringBuilder>, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForCondition(String, System.Func(Of Boolean), System.Action(Of Responsible.State.StateStringBuilder), String, String, Integer)
  nameWithType: Responsibly.WaitForCondition(string, Func<bool>, Action<StateStringBuilder>, string, string, int)
  nameWithType.vb: Responsibly.WaitForCondition(String, Func(Of Boolean), Action(Of StateStringBuilder), String, String, Integer)
- uid: Responsible.Responsibly.WaitForCondition*
  name: WaitForCondition
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCondition_
  commentId: Overload:Responsible.Responsibly.WaitForCondition
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForCondition
  nameWithType: Responsibly.WaitForCondition
- uid: Responsible.Responsibly.WaitForConditionOn*
  name: WaitForConditionOn
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForConditionOn_
  commentId: Overload:Responsible.Responsibly.WaitForConditionOn
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForConditionOn
  nameWithType: Responsibly.WaitForConditionOn
- uid: Responsible.Responsibly.WaitForConditionOn``1(System.String,System.Func{``0},System.Func{``0,System.Boolean},System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name: WaitForConditionOn<T>(string, Func<T>, Func<T, bool>, Action<StateStringBuilder>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForConditionOn__1_System_String_System_Func___0__System_Func___0_System_Boolean__System_Action_Responsible_State_StateStringBuilder__System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForConditionOn``1(System.String,System.Func{``0},System.Func{``0,System.Boolean},System.Action{Responsible.State.StateStringBuilder},System.String,System.String,System.Int32)
  name.vb: WaitForConditionOn(Of T)(String, Func(Of T), Func(Of T, Boolean), Action(Of StateStringBuilder), String, String, Integer)
  fullName: Responsible.Responsibly.WaitForConditionOn<T>(string, System.Func<T>, System.Func<T, bool>, System.Action<Responsible.State.StateStringBuilder>, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForConditionOn(Of T)(String, System.Func(Of T), System.Func(Of T, Boolean), System.Action(Of Responsible.State.StateStringBuilder), String, String, Integer)
  nameWithType: Responsibly.WaitForConditionOn<T>(string, Func<T>, Func<T, bool>, Action<StateStringBuilder>, string, string, int)
  nameWithType.vb: Responsibly.WaitForConditionOn(Of T)(String, Func(Of T), Func(Of T, Boolean), Action(Of StateStringBuilder), String, String, Integer)
- uid: Responsible.Responsibly.WaitForConstraint*
  name: WaitForConstraint
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForConstraint_
  commentId: Overload:Responsible.Responsibly.WaitForConstraint
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForConstraint
  nameWithType: Responsibly.WaitForConstraint
- uid: Responsible.Responsibly.WaitForConstraint``1(System.String,System.Func{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.String,System.Int32)
  name: WaitForConstraint<T>(string, Func<T>, IResolveConstraint, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForConstraint__1_System_String_System_Func___0__NUnit_Framework_Constraints_IResolveConstraint_System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForConstraint``1(System.String,System.Func{``0},NUnit.Framework.Constraints.IResolveConstraint,System.String,System.String,System.Int32)
  name.vb: WaitForConstraint(Of T)(String, Func(Of T), IResolveConstraint, String, String, Integer)
  fullName: Responsible.Responsibly.WaitForConstraint<T>(string, System.Func<T>, NUnit.Framework.Constraints.IResolveConstraint, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForConstraint(Of T)(String, System.Func(Of T), NUnit.Framework.Constraints.IResolveConstraint, String, String, Integer)
  nameWithType: Responsibly.WaitForConstraint<T>(string, Func<T>, IResolveConstraint, string, string, int)
  nameWithType.vb: Responsibly.WaitForConstraint(Of T)(String, Func(Of T), IResolveConstraint, String, String, Integer)
- uid: Responsible.Responsibly.WaitForCoroutine(System.String,System.Func{System.Collections.IEnumerator},System.String,System.String,System.Int32)
  name: WaitForCoroutine(string, Func<IEnumerator>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCoroutine_System_String_System_Func_System_Collections_IEnumerator__System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForCoroutine(System.String,System.Func{System.Collections.IEnumerator},System.String,System.String,System.Int32)
  name.vb: WaitForCoroutine(String, Func(Of IEnumerator), String, String, Integer)
  fullName: Responsible.Responsibly.WaitForCoroutine(string, System.Func<System.Collections.IEnumerator>, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForCoroutine(String, System.Func(Of System.Collections.IEnumerator), String, String, Integer)
  nameWithType: Responsibly.WaitForCoroutine(string, Func<IEnumerator>, string, string, int)
  nameWithType.vb: Responsibly.WaitForCoroutine(String, Func(Of IEnumerator), String, String, Integer)
- uid: Responsible.Responsibly.WaitForCoroutine*
  name: WaitForCoroutine
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCoroutine_
  commentId: Overload:Responsible.Responsibly.WaitForCoroutine
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForCoroutine
  nameWithType: Responsibly.WaitForCoroutine
- uid: Responsible.Responsibly.WaitForCoroutineMethod(System.Func{System.Collections.IEnumerator},System.String,System.String,System.Int32)
  name: WaitForCoroutineMethod(Func<IEnumerator>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCoroutineMethod_System_Func_System_Collections_IEnumerator__System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForCoroutineMethod(System.Func{System.Collections.IEnumerator},System.String,System.String,System.Int32)
  name.vb: WaitForCoroutineMethod(Func(Of IEnumerator), String, String, Integer)
  fullName: Responsible.Responsibly.WaitForCoroutineMethod(System.Func<System.Collections.IEnumerator>, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForCoroutineMethod(System.Func(Of System.Collections.IEnumerator), String, String, Integer)
  nameWithType: Responsibly.WaitForCoroutineMethod(Func<IEnumerator>, string, string, int)
  nameWithType.vb: Responsibly.WaitForCoroutineMethod(Func(Of IEnumerator), String, String, Integer)
- uid: Responsible.Responsibly.WaitForCoroutineMethod*
  name: WaitForCoroutineMethod
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForCoroutineMethod_
  commentId: Overload:Responsible.Responsibly.WaitForCoroutineMethod
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForCoroutineMethod
  nameWithType: Responsibly.WaitForCoroutineMethod
- uid: Responsible.Responsibly.WaitForFrames(System.Int32,System.String,System.String,System.Int32)
  name: WaitForFrames(int, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForFrames_System_Int32_System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForFrames(System.Int32,System.String,System.String,System.Int32)
  name.vb: WaitForFrames(Integer, String, String, Integer)
  fullName: Responsible.Responsibly.WaitForFrames(int, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForFrames(Integer, String, String, Integer)
  nameWithType: Responsibly.WaitForFrames(int, string, string, int)
  nameWithType.vb: Responsibly.WaitForFrames(Integer, String, String, Integer)
- uid: Responsible.Responsibly.WaitForFrames*
  name: WaitForFrames
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForFrames_
  commentId: Overload:Responsible.Responsibly.WaitForFrames
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForFrames
  nameWithType: Responsibly.WaitForFrames
- uid: Responsible.Responsibly.WaitForSeconds(System.Double,System.String,System.String,System.Int32)
  name: WaitForSeconds(double, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForSeconds_System_Double_System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForSeconds(System.Double,System.String,System.String,System.Int32)
  name.vb: WaitForSeconds(Double, String, String, Integer)
  fullName: Responsible.Responsibly.WaitForSeconds(double, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForSeconds(Double, String, String, Integer)
  nameWithType: Responsibly.WaitForSeconds(double, string, string, int)
  nameWithType.vb: Responsibly.WaitForSeconds(Double, String, String, Integer)
- uid: Responsible.Responsibly.WaitForSeconds*
  name: WaitForSeconds
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForSeconds_
  commentId: Overload:Responsible.Responsibly.WaitForSeconds
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForSeconds
  nameWithType: Responsibly.WaitForSeconds
- uid: Responsible.Responsibly.WaitForTask*
  name: WaitForTask
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForTask_
  commentId: Overload:Responsible.Responsibly.WaitForTask
  isSpec: "True"
  fullName: Responsible.Responsibly.WaitForTask
  nameWithType: Responsibly.WaitForTask
- uid: Responsible.Responsibly.WaitForTask``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.String,System.String,System.Int32)
  name: WaitForTask<T>(string, Func<CancellationToken, Task<T>>, string, string, int)
  href: api/Responsible.Responsibly.html#Responsible_Responsibly_WaitForTask__1_System_String_System_Func_System_Threading_CancellationToken_System_Threading_Tasks_Task___0___System_String_System_String_System_Int32_
  commentId: M:Responsible.Responsibly.WaitForTask``1(System.String,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.String,System.String,System.Int32)
  name.vb: WaitForTask(Of T)(String, Func(Of CancellationToken, Task(Of T)), String, String, Integer)
  fullName: Responsible.Responsibly.WaitForTask<T>(string, System.Func<System.Threading.CancellationToken, System.Threading.Tasks.Task<T>>, string, string, int)
  fullName.vb: Responsible.Responsibly.WaitForTask(Of T)(String, System.Func(Of System.Threading.CancellationToken, System.Threading.Tasks.Task(Of T)), String, String, Integer)
  nameWithType: Responsibly.WaitForTask<T>(string, Func<CancellationToken, Task<T>>, string, string, int)
  nameWithType.vb: Responsibly.WaitForTask(Of T)(String, Func(Of CancellationToken, Task(Of T)), String, String, Integer)
- uid: Responsible.State
  name: Responsible.State
  href: api/Responsible.State.html
  commentId: N:Responsible.State
  fullName: Responsible.State
  nameWithType: Responsible.State
- uid: Responsible.State.ITestOperationState
  name: ITestOperationState
  href: api/Responsible.State.ITestOperationState.html
  commentId: T:Responsible.State.ITestOperationState
  fullName: Responsible.State.ITestOperationState
  nameWithType: ITestOperationState
- uid: Responsible.State.ITestOperationState.BuildDescription(Responsible.State.StateStringBuilder)
  name: BuildDescription(StateStringBuilder)
  href: api/Responsible.State.ITestOperationState.html#Responsible_State_ITestOperationState_BuildDescription_Responsible_State_StateStringBuilder_
  commentId: M:Responsible.State.ITestOperationState.BuildDescription(Responsible.State.StateStringBuilder)
  fullName: Responsible.State.ITestOperationState.BuildDescription(Responsible.State.StateStringBuilder)
  nameWithType: ITestOperationState.BuildDescription(StateStringBuilder)
- uid: Responsible.State.ITestOperationState.BuildDescription*
  name: BuildDescription
  href: api/Responsible.State.ITestOperationState.html#Responsible_State_ITestOperationState_BuildDescription_
  commentId: Overload:Responsible.State.ITestOperationState.BuildDescription
  isSpec: "True"
  fullName: Responsible.State.ITestOperationState.BuildDescription
  nameWithType: ITestOperationState.BuildDescription
- uid: Responsible.State.ITestOperationState.Status
  name: Status
  href: api/Responsible.State.ITestOperationState.html#Responsible_State_ITestOperationState_Status
  commentId: P:Responsible.State.ITestOperationState.Status
  fullName: Responsible.State.ITestOperationState.Status
  nameWithType: ITestOperationState.Status
- uid: Responsible.State.ITestOperationState.Status*
  name: Status
  href: api/Responsible.State.ITestOperationState.html#Responsible_State_ITestOperationState_Status_
  commentId: Overload:Responsible.State.ITestOperationState.Status
  isSpec: "True"
  fullName: Responsible.State.ITestOperationState.Status
  nameWithType: ITestOperationState.Status
- uid: Responsible.State.ITestOperationState`1
  name: ITestOperationState<T>
  href: api/Responsible.State.ITestOperationState-1.html
  commentId: T:Responsible.State.ITestOperationState`1
  name.vb: ITestOperationState(Of T)
  fullName: Responsible.State.ITestOperationState<T>
  fullName.vb: Responsible.State.ITestOperationState(Of T)
  nameWithType: ITestOperationState<T>
  nameWithType.vb: ITestOperationState(Of T)
- uid: Responsible.State.ITestOperationState`1.ExecuteUnsafe*
  name: ExecuteUnsafe
  href: api/Responsible.State.ITestOperationState-1.html#Responsible_State_ITestOperationState_1_ExecuteUnsafe_
  commentId: Overload:Responsible.State.ITestOperationState`1.ExecuteUnsafe
  isSpec: "True"
  fullName: Responsible.State.ITestOperationState<T>.ExecuteUnsafe
  fullName.vb: Responsible.State.ITestOperationState(Of T).ExecuteUnsafe
  nameWithType: ITestOperationState<T>.ExecuteUnsafe
  nameWithType.vb: ITestOperationState(Of T).ExecuteUnsafe
- uid: Responsible.State.ITestOperationState`1.ExecuteUnsafe``1(Responsible.Context.RunContext,System.Threading.CancellationToken)
  name: ExecuteUnsafe<TResult>(RunContext, CancellationToken)
  href: api/Responsible.State.ITestOperationState-1.html#Responsible_State_ITestOperationState_1_ExecuteUnsafe__1_Responsible_Context_RunContext_System_Threading_CancellationToken_
  commentId: M:Responsible.State.ITestOperationState`1.ExecuteUnsafe``1(Responsible.Context.RunContext,System.Threading.CancellationToken)
  name.vb: ExecuteUnsafe(Of TResult)(RunContext, CancellationToken)
  fullName: Responsible.State.ITestOperationState<T>.ExecuteUnsafe<TResult>(Responsible.Context.RunContext, System.Threading.CancellationToken)
  fullName.vb: Responsible.State.ITestOperationState(Of T).ExecuteUnsafe(Of TResult)(Responsible.Context.RunContext, System.Threading.CancellationToken)
  nameWithType: ITestOperationState<T>.ExecuteUnsafe<TResult>(RunContext, CancellationToken)
  nameWithType.vb: ITestOperationState(Of T).ExecuteUnsafe(Of TResult)(RunContext, CancellationToken)
- uid: Responsible.State.StateStringBuilder
  name: StateStringBuilder
  href: api/Responsible.State.StateStringBuilder.html
  commentId: T:Responsible.State.StateStringBuilder
  fullName: Responsible.State.StateStringBuilder
  nameWithType: StateStringBuilder
- uid: Responsible.State.StateStringBuilder.AddDetails(System.String)
  name: AddDetails(string)
  href: api/Responsible.State.StateStringBuilder.html#Responsible_State_StateStringBuilder_AddDetails_System_String_
  commentId: M:Responsible.State.StateStringBuilder.AddDetails(System.String)
  name.vb: AddDetails(String)
  fullName: Responsible.State.StateStringBuilder.AddDetails(string)
  fullName.vb: Responsible.State.StateStringBuilder.AddDetails(String)
  nameWithType: StateStringBuilder.AddDetails(string)
  nameWithType.vb: StateStringBuilder.AddDetails(String)
- uid: Responsible.State.StateStringBuilder.AddDetails*
  name: AddDetails
  href: api/Responsible.State.StateStringBuilder.html#Responsible_State_StateStringBuilder_AddDetails_
  commentId: Overload:Responsible.State.StateStringBuilder.AddDetails
  isSpec: "True"
  fullName: Responsible.State.StateStringBuilder.AddDetails
  nameWithType: StateStringBuilder.AddDetails
- uid: Responsible.State.StateStringBuilder.AddNestedDetails(System.String,System.Action{Responsible.State.StateStringBuilder})
  name: AddNestedDetails(string, Action<StateStringBuilder>)
  href: api/Responsible.State.StateStringBuilder.html#Responsible_State_StateStringBuilder_AddNestedDetails_System_String_System_Action_Responsible_State_StateStringBuilder__
  commentId: M:Responsible.State.StateStringBuilder.AddNestedDetails(System.String,System.Action{Responsible.State.StateStringBuilder})
  name.vb: AddNestedDetails(String, Action(Of StateStringBuilder))
  fullName: Responsible.State.StateStringBuilder.AddNestedDetails(string, System.Action<Responsible.State.StateStringBuilder>)
  fullName.vb: Responsible.State.StateStringBuilder.AddNestedDetails(String, System.Action(Of Responsible.State.StateStringBuilder))
  nameWithType: StateStringBuilder.AddNestedDetails(string, Action<StateStringBuilder>)
  nameWithType.vb: StateStringBuilder.AddNestedDetails(String, Action(Of StateStringBuilder))
- uid: Responsible.State.StateStringBuilder.AddNestedDetails*
  name: AddNestedDetails
  href: api/Responsible.State.StateStringBuilder.html#Responsible_State_StateStringBuilder_AddNestedDetails_
  commentId: Overload:Responsible.State.StateStringBuilder.AddNestedDetails
  isSpec: "True"
  fullName: Responsible.State.StateStringBuilder.AddNestedDetails
  nameWithType: StateStringBuilder.AddNestedDetails
- uid: Responsible.State.TestOperationStateTransition
  name: TestOperationStateTransition
  href: api/Responsible.State.TestOperationStateTransition.html
  commentId: T:Responsible.State.TestOperationStateTransition
  fullName: Responsible.State.TestOperationStateTransition
  nameWithType: TestOperationStateTransition
- uid: Responsible.State.TestOperationStateTransition.Finished
  name: Finished
  href: api/Responsible.State.TestOperationStateTransition.html#Responsible_State_TestOperationStateTransition_Finished
  commentId: F:Responsible.State.TestOperationStateTransition.Finished
  fullName: Responsible.State.TestOperationStateTransition.Finished
  nameWithType: TestOperationStateTransition.Finished
- uid: Responsible.State.TestOperationStateTransition.Started
  name: Started
  href: api/Responsible.State.TestOperationStateTransition.html#Responsible_State_TestOperationStateTransition_Started
  commentId: F:Responsible.State.TestOperationStateTransition.Started
  fullName: Responsible.State.TestOperationStateTransition.Started
  nameWithType: TestOperationStateTransition.Started
- uid: Responsible.State.TestOperationStatus
  name: TestOperationStatus
  href: api/Responsible.State.TestOperationStatus.html
  commentId: T:Responsible.State.TestOperationStatus
  fullName: Responsible.State.TestOperationStatus
  nameWithType: TestOperationStatus
- uid: Responsible.TestFailureException
  name: TestFailureException
  href: api/Responsible.TestFailureException.html
  commentId: T:Responsible.TestFailureException
  fullName: Responsible.TestFailureException
  nameWithType: TestFailureException
- uid: Responsible.TestInstruction
  name: TestInstruction
  href: api/Responsible.TestInstruction.html
  commentId: T:Responsible.TestInstruction
  fullName: Responsible.TestInstruction
  nameWithType: TestInstruction
- uid: Responsible.TestInstruction.BoxResult*
  name: BoxResult
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_BoxResult_
  commentId: Overload:Responsible.TestInstruction.BoxResult
  isSpec: "True"
  fullName: Responsible.TestInstruction.BoxResult
  nameWithType: TestInstruction.BoxResult
- uid: Responsible.TestInstruction.BoxResult``1(Responsible.ITestInstruction{``0})
  name: BoxResult<T>(ITestInstruction<T>)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_BoxResult__1_Responsible_ITestInstruction___0__
  commentId: M:Responsible.TestInstruction.BoxResult``1(Responsible.ITestInstruction{``0})
  name.vb: BoxResult(Of T)(ITestInstruction(Of T))
  fullName: Responsible.TestInstruction.BoxResult<T>(Responsible.ITestInstruction<T>)
  fullName.vb: Responsible.TestInstruction.BoxResult(Of T)(Responsible.ITestInstruction(Of T))
  nameWithType: TestInstruction.BoxResult<T>(ITestInstruction<T>)
  nameWithType.vb: TestInstruction.BoxResult(Of T)(ITestInstruction(Of T))
- uid: Responsible.TestInstruction.ContinueWith*
  name: ContinueWith
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ContinueWith_
  commentId: Overload:Responsible.TestInstruction.ContinueWith
  isSpec: "True"
  fullName: Responsible.TestInstruction.ContinueWith
  nameWithType: TestInstruction.ContinueWith
- uid: Responsible.TestInstruction.ContinueWith``2(Responsible.ITestInstruction{``0},Responsible.ITestInstruction{``1},System.String,System.String,System.Int32)
  name: ContinueWith<T1, T2>(ITestInstruction<T1>, ITestInstruction<T2>, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ContinueWith__2_Responsible_ITestInstruction___0__Responsible_ITestInstruction___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.ContinueWith``2(Responsible.ITestInstruction{``0},Responsible.ITestInstruction{``1},System.String,System.String,System.Int32)
  name.vb: ContinueWith(Of T1, T2)(ITestInstruction(Of T1), ITestInstruction(Of T2), String, String, Integer)
  fullName: Responsible.TestInstruction.ContinueWith<T1, T2>(Responsible.ITestInstruction<T1>, Responsible.ITestInstruction<T2>, string, string, int)
  fullName.vb: Responsible.TestInstruction.ContinueWith(Of T1, T2)(Responsible.ITestInstruction(Of T1), Responsible.ITestInstruction(Of T2), String, String, Integer)
  nameWithType: TestInstruction.ContinueWith<T1, T2>(ITestInstruction<T1>, ITestInstruction<T2>, string, string, int)
  nameWithType.vb: TestInstruction.ContinueWith(Of T1, T2)(ITestInstruction(Of T1), ITestInstruction(Of T2), String, String, Integer)
- uid: Responsible.TestInstruction.ContinueWith``2(Responsible.ITestInstruction{``0},System.Func{``0,Responsible.ITestInstruction{``1}},System.String,System.String,System.Int32)
  name: ContinueWith<T1, T2>(ITestInstruction<T1>, Func<T1, ITestInstruction<T2>>, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ContinueWith__2_Responsible_ITestInstruction___0__System_Func___0_Responsible_ITestInstruction___1___System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.ContinueWith``2(Responsible.ITestInstruction{``0},System.Func{``0,Responsible.ITestInstruction{``1}},System.String,System.String,System.Int32)
  name.vb: ContinueWith(Of T1, T2)(ITestInstruction(Of T1), Func(Of T1, ITestInstruction(Of T2)), String, String, Integer)
  fullName: Responsible.TestInstruction.ContinueWith<T1, T2>(Responsible.ITestInstruction<T1>, System.Func<T1, Responsible.ITestInstruction<T2>>, string, string, int)
  fullName.vb: Responsible.TestInstruction.ContinueWith(Of T1, T2)(Responsible.ITestInstruction(Of T1), System.Func(Of T1, Responsible.ITestInstruction(Of T2)), String, String, Integer)
  nameWithType: TestInstruction.ContinueWith<T1, T2>(ITestInstruction<T1>, Func<T1, ITestInstruction<T2>>, string, string, int)
  nameWithType.vb: TestInstruction.ContinueWith(Of T1, T2)(ITestInstruction(Of T1), Func(Of T1, ITestInstruction(Of T2)), String, String, Integer)
- uid: Responsible.TestInstruction.GroupedAs*
  name: GroupedAs
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_GroupedAs_
  commentId: Overload:Responsible.TestInstruction.GroupedAs
  isSpec: "True"
  fullName: Responsible.TestInstruction.GroupedAs
  nameWithType: TestInstruction.GroupedAs
- uid: Responsible.TestInstruction.GroupedAs``1(Responsible.ITestInstruction{``0},System.String)
  name: GroupedAs<T>(ITestInstruction<T>, string)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_GroupedAs__1_Responsible_ITestInstruction___0__System_String_
  commentId: M:Responsible.TestInstruction.GroupedAs``1(Responsible.ITestInstruction{``0},System.String)
  name.vb: GroupedAs(Of T)(ITestInstruction(Of T), String)
  fullName: Responsible.TestInstruction.GroupedAs<T>(Responsible.ITestInstruction<T>, string)
  fullName.vb: Responsible.TestInstruction.GroupedAs(Of T)(Responsible.ITestInstruction(Of T), String)
  nameWithType: TestInstruction.GroupedAs<T>(ITestInstruction<T>, string)
  nameWithType.vb: TestInstruction.GroupedAs(Of T)(ITestInstruction(Of T), String)
- uid: Responsible.TestInstruction.RepeatUntil*
  name: RepeatUntil
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RepeatUntil_
  commentId: Overload:Responsible.TestInstruction.RepeatUntil
  isSpec: "True"
  fullName: Responsible.TestInstruction.RepeatUntil
  nameWithType: TestInstruction.RepeatUntil
- uid: Responsible.TestInstruction.RepeatUntil``2(Responsible.ITestInstruction{``1},Responsible.ITestWaitCondition{``0},System.Int32,System.String,System.String,System.Int32)
  name: RepeatUntil<TWait, TInstruction>(ITestInstruction<TInstruction>, ITestWaitCondition<TWait>, int, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RepeatUntil__2_Responsible_ITestInstruction___1__Responsible_ITestWaitCondition___0__System_Int32_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.RepeatUntil``2(Responsible.ITestInstruction{``1},Responsible.ITestWaitCondition{``0},System.Int32,System.String,System.String,System.Int32)
  name.vb: RepeatUntil(Of TWait, TInstruction)(ITestInstruction(Of TInstruction), ITestWaitCondition(Of TWait), Integer, String, String, Integer)
  fullName: Responsible.TestInstruction.RepeatUntil<TWait, TInstruction>(Responsible.ITestInstruction<TInstruction>, Responsible.ITestWaitCondition<TWait>, int, string, string, int)
  fullName.vb: Responsible.TestInstruction.RepeatUntil(Of TWait, TInstruction)(Responsible.ITestInstruction(Of TInstruction), Responsible.ITestWaitCondition(Of TWait), Integer, String, String, Integer)
  nameWithType: TestInstruction.RepeatUntil<TWait, TInstruction>(ITestInstruction<TInstruction>, ITestWaitCondition<TWait>, int, string, string, int)
  nameWithType.vb: TestInstruction.RepeatUntil(Of TWait, TInstruction)(ITestInstruction(Of TInstruction), ITestWaitCondition(Of TWait), Integer, String, String, Integer)
- uid: Responsible.TestInstruction.RunAsLoop*
  name: RunAsLoop
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RunAsLoop_
  commentId: Overload:Responsible.TestInstruction.RunAsLoop
  isSpec: "True"
  fullName: Responsible.TestInstruction.RunAsLoop
  nameWithType: TestInstruction.RunAsLoop
- uid: Responsible.TestInstruction.RunAsLoop``1(Responsible.ITestInstruction{``0},System.Action,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: RunAsLoop<T>(ITestInstruction<T>, Action, CancellationToken, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RunAsLoop__1_Responsible_ITestInstruction___0__System_Action_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.RunAsLoop``1(Responsible.ITestInstruction{``0},System.Action,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: RunAsLoop(Of T)(ITestInstruction(Of T), Action, CancellationToken, String, String, Integer)
  fullName: Responsible.TestInstruction.RunAsLoop<T>(Responsible.ITestInstruction<T>, System.Action, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestInstruction.RunAsLoop(Of T)(Responsible.ITestInstruction(Of T), System.Action, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestInstruction.RunAsLoop<T>(ITestInstruction<T>, Action, CancellationToken, string, string, int)
  nameWithType.vb: TestInstruction.RunAsLoop(Of T)(ITestInstruction(Of T), Action, CancellationToken, String, String, Integer)
- uid: Responsible.TestInstruction.RunAsSimulatedUpdateLoop*
  name: RunAsSimulatedUpdateLoop
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RunAsSimulatedUpdateLoop_
  commentId: Overload:Responsible.TestInstruction.RunAsSimulatedUpdateLoop
  isSpec: "True"
  fullName: Responsible.TestInstruction.RunAsSimulatedUpdateLoop
  nameWithType: TestInstruction.RunAsSimulatedUpdateLoop
- uid: Responsible.TestInstruction.RunAsSimulatedUpdateLoop``1(Responsible.ITestInstruction{``0},System.Double,System.Action{System.TimeSpan},System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: RunAsSimulatedUpdateLoop<T>(ITestInstruction<T>, double, Action<TimeSpan>, CancellationToken, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_RunAsSimulatedUpdateLoop__1_Responsible_ITestInstruction___0__System_Double_System_Action_System_TimeSpan__System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.RunAsSimulatedUpdateLoop``1(Responsible.ITestInstruction{``0},System.Double,System.Action{System.TimeSpan},System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: RunAsSimulatedUpdateLoop(Of T)(ITestInstruction(Of T), Double, Action(Of TimeSpan), CancellationToken, String, String, Integer)
  fullName: Responsible.TestInstruction.RunAsSimulatedUpdateLoop<T>(Responsible.ITestInstruction<T>, double, System.Action<System.TimeSpan>, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestInstruction.RunAsSimulatedUpdateLoop(Of T)(Responsible.ITestInstruction(Of T), Double, System.Action(Of System.TimeSpan), System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestInstruction.RunAsSimulatedUpdateLoop<T>(ITestInstruction<T>, double, Action<TimeSpan>, CancellationToken, string, string, int)
  nameWithType.vb: TestInstruction.RunAsSimulatedUpdateLoop(Of T)(ITestInstruction(Of T), Double, Action(Of TimeSpan), CancellationToken, String, String, Integer)
- uid: Responsible.TestInstruction.Select*
  name: Select
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_Select_
  commentId: Overload:Responsible.TestInstruction.Select
  isSpec: "True"
  fullName: Responsible.TestInstruction.Select
  nameWithType: TestInstruction.Select
- uid: Responsible.TestInstruction.Select``2(Responsible.ITestInstruction{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name: Select<T1, T2>(ITestInstruction<T1>, Func<T1, T2>, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_Select__2_Responsible_ITestInstruction___0__System_Func___0___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.Select``2(Responsible.ITestInstruction{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name.vb: Select(Of T1, T2)(ITestInstruction(Of T1), Func(Of T1, T2), String, String, Integer)
  fullName: Responsible.TestInstruction.Select<T1, T2>(Responsible.ITestInstruction<T1>, System.Func<T1, T2>, string, string, int)
  fullName.vb: Responsible.TestInstruction.Select(Of T1, T2)(Responsible.ITestInstruction(Of T1), System.Func(Of T1, T2), String, String, Integer)
  nameWithType: TestInstruction.Select<T1, T2>(ITestInstruction<T1>, Func<T1, T2>, string, string, int)
  nameWithType.vb: TestInstruction.Select(Of T1, T2)(ITestInstruction(Of T1), Func(Of T1, T2), String, String, Integer)
- uid: Responsible.TestInstruction.Sequence(System.Collections.Generic.IEnumerable{Responsible.ITestInstruction{System.Object}},System.String,System.String,System.Int32,System.String)
  name: Sequence(IEnumerable<ITestInstruction<object>>, string, string, int, string)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_Sequence_System_Collections_Generic_IEnumerable_Responsible_ITestInstruction_System_Object___System_String_System_String_System_Int32_System_String_
  commentId: M:Responsible.TestInstruction.Sequence(System.Collections.Generic.IEnumerable{Responsible.ITestInstruction{System.Object}},System.String,System.String,System.Int32,System.String)
  name.vb: Sequence(IEnumerable(Of ITestInstruction(Of Object)), String, String, Integer, String)
  fullName: Responsible.TestInstruction.Sequence(System.Collections.Generic.IEnumerable<Responsible.ITestInstruction<object>>, string, string, int, string)
  fullName.vb: Responsible.TestInstruction.Sequence(System.Collections.Generic.IEnumerable(Of Responsible.ITestInstruction(Of Object)), String, String, Integer, String)
  nameWithType: TestInstruction.Sequence(IEnumerable<ITestInstruction<object>>, string, string, int, string)
  nameWithType.vb: TestInstruction.Sequence(IEnumerable(Of ITestInstruction(Of Object)), String, String, Integer, String)
- uid: Responsible.TestInstruction.Sequence*
  name: Sequence
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_Sequence_
  commentId: Overload:Responsible.TestInstruction.Sequence
  isSpec: "True"
  fullName: Responsible.TestInstruction.Sequence
  nameWithType: TestInstruction.Sequence
- uid: Responsible.TestInstruction.ToTask*
  name: ToTask
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ToTask_
  commentId: Overload:Responsible.TestInstruction.ToTask
  isSpec: "True"
  fullName: Responsible.TestInstruction.ToTask
  nameWithType: TestInstruction.ToTask
- uid: Responsible.TestInstruction.ToTask``1(Responsible.ITestInstruction{``0},Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: ToTask<T>(ITestInstruction<T>, TestInstructionExecutor, CancellationToken, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ToTask__1_Responsible_ITestInstruction___0__Responsible_TestInstructionExecutor_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.ToTask``1(Responsible.ITestInstruction{``0},Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: ToTask(Of T)(ITestInstruction(Of T), TestInstructionExecutor, CancellationToken, String, String, Integer)
  fullName: Responsible.TestInstruction.ToTask<T>(Responsible.ITestInstruction<T>, Responsible.TestInstructionExecutor, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestInstruction.ToTask(Of T)(Responsible.ITestInstruction(Of T), Responsible.TestInstructionExecutor, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestInstruction.ToTask<T>(ITestInstruction<T>, TestInstructionExecutor, CancellationToken, string, string, int)
  nameWithType.vb: TestInstruction.ToTask(Of T)(ITestInstruction(Of T), TestInstructionExecutor, CancellationToken, String, String, Integer)
- uid: Responsible.TestInstruction.ToYieldInstruction*
  name: ToYieldInstruction
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ToYieldInstruction_
  commentId: Overload:Responsible.TestInstruction.ToYieldInstruction
  isSpec: "True"
  fullName: Responsible.TestInstruction.ToYieldInstruction
  nameWithType: TestInstruction.ToYieldInstruction
- uid: Responsible.TestInstruction.ToYieldInstruction``1(Responsible.ITestInstruction{``0},Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: ToYieldInstruction<T>(ITestInstruction<T>, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  href: api/Responsible.TestInstruction.html#Responsible_TestInstruction_ToYieldInstruction__1_Responsible_ITestInstruction___0__Responsible_TestInstructionExecutor_System_Boolean_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestInstruction.ToYieldInstruction``1(Responsible.ITestInstruction{``0},Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: ToYieldInstruction(Of T)(ITestInstruction(Of T), TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
  fullName: Responsible.TestInstruction.ToYieldInstruction<T>(Responsible.ITestInstruction<T>, Responsible.TestInstructionExecutor, bool, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestInstruction.ToYieldInstruction(Of T)(Responsible.ITestInstruction(Of T), Responsible.TestInstructionExecutor, Boolean, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestInstruction.ToYieldInstruction<T>(ITestInstruction<T>, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  nameWithType.vb: TestInstruction.ToYieldInstruction(Of T)(ITestInstruction(Of T), TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
- uid: Responsible.TestInstructionExecutor
  name: TestInstructionExecutor
  href: api/Responsible.TestInstructionExecutor.html
  commentId: T:Responsible.TestInstructionExecutor
  fullName: Responsible.TestInstructionExecutor
  nameWithType: TestInstructionExecutor
- uid: Responsible.TestInstructionExecutor.#ctor(Responsible.ITestScheduler,Responsible.IExternalResultSource,Responsible.IFailureListener,Responsible.IGlobalContextProvider,System.Collections.Generic.IReadOnlyList{System.Type})
  name: TestInstructionExecutor(ITestScheduler, IExternalResultSource, IFailureListener, IGlobalContextProvider, IReadOnlyList<Type>)
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor__ctor_Responsible_ITestScheduler_Responsible_IExternalResultSource_Responsible_IFailureListener_Responsible_IGlobalContextProvider_System_Collections_Generic_IReadOnlyList_System_Type__
  commentId: M:Responsible.TestInstructionExecutor.#ctor(Responsible.ITestScheduler,Responsible.IExternalResultSource,Responsible.IFailureListener,Responsible.IGlobalContextProvider,System.Collections.Generic.IReadOnlyList{System.Type})
  name.vb: New(ITestScheduler, IExternalResultSource, IFailureListener, IGlobalContextProvider, IReadOnlyList(Of Type))
  fullName: Responsible.TestInstructionExecutor.TestInstructionExecutor(Responsible.ITestScheduler, Responsible.IExternalResultSource, Responsible.IFailureListener, Responsible.IGlobalContextProvider, System.Collections.Generic.IReadOnlyList<System.Type>)
  fullName.vb: Responsible.TestInstructionExecutor.New(Responsible.ITestScheduler, Responsible.IExternalResultSource, Responsible.IFailureListener, Responsible.IGlobalContextProvider, System.Collections.Generic.IReadOnlyList(Of System.Type))
  nameWithType: TestInstructionExecutor.TestInstructionExecutor(ITestScheduler, IExternalResultSource, IFailureListener, IGlobalContextProvider, IReadOnlyList<Type>)
  nameWithType.vb: TestInstructionExecutor.New(ITestScheduler, IExternalResultSource, IFailureListener, IGlobalContextProvider, IReadOnlyList(Of Type))
- uid: Responsible.TestInstructionExecutor.#ctor*
  name: TestInstructionExecutor
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor__ctor_
  commentId: Overload:Responsible.TestInstructionExecutor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Responsible.TestInstructionExecutor.TestInstructionExecutor
  fullName.vb: Responsible.TestInstructionExecutor.New
  nameWithType: TestInstructionExecutor.TestInstructionExecutor
  nameWithType.vb: TestInstructionExecutor.New
- uid: Responsible.TestInstructionExecutor.Dispose
  name: Dispose()
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor_Dispose
  commentId: M:Responsible.TestInstructionExecutor.Dispose
  fullName: Responsible.TestInstructionExecutor.Dispose()
  nameWithType: TestInstructionExecutor.Dispose()
- uid: Responsible.TestInstructionExecutor.Dispose*
  name: Dispose
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor_Dispose_
  commentId: Overload:Responsible.TestInstructionExecutor.Dispose
  isSpec: "True"
  fullName: Responsible.TestInstructionExecutor.Dispose
  nameWithType: TestInstructionExecutor.Dispose
- uid: Responsible.TestInstructionExecutor.StateNotificationCallback
  name: TestInstructionExecutor.StateNotificationCallback
  href: api/Responsible.TestInstructionExecutor.StateNotificationCallback.html
  commentId: T:Responsible.TestInstructionExecutor.StateNotificationCallback
  fullName: Responsible.TestInstructionExecutor.StateNotificationCallback
  nameWithType: TestInstructionExecutor.StateNotificationCallback
- uid: Responsible.TestInstructionExecutor.SubscribeToStates(Responsible.TestInstructionExecutor.StateNotificationCallback)
  name: SubscribeToStates(StateNotificationCallback)
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor_SubscribeToStates_Responsible_TestInstructionExecutor_StateNotificationCallback_
  commentId: M:Responsible.TestInstructionExecutor.SubscribeToStates(Responsible.TestInstructionExecutor.StateNotificationCallback)
  fullName: Responsible.TestInstructionExecutor.SubscribeToStates(Responsible.TestInstructionExecutor.StateNotificationCallback)
  nameWithType: TestInstructionExecutor.SubscribeToStates(TestInstructionExecutor.StateNotificationCallback)
- uid: Responsible.TestInstructionExecutor.SubscribeToStates*
  name: SubscribeToStates
  href: api/Responsible.TestInstructionExecutor.html#Responsible_TestInstructionExecutor_SubscribeToStates_
  commentId: Overload:Responsible.TestInstructionExecutor.SubscribeToStates
  isSpec: "True"
  fullName: Responsible.TestInstructionExecutor.SubscribeToStates
  nameWithType: TestInstructionExecutor.SubscribeToStates
- uid: Responsible.TestOperationState
  name: TestOperationState
  href: api/Responsible.TestOperationState.html
  commentId: T:Responsible.TestOperationState
  fullName: Responsible.TestOperationState
  nameWithType: TestOperationState
- uid: Responsible.TestOperationState.ToTask*
  name: ToTask
  href: api/Responsible.TestOperationState.html#Responsible_TestOperationState_ToTask_
  commentId: Overload:Responsible.TestOperationState.ToTask
  isSpec: "True"
  fullName: Responsible.TestOperationState.ToTask
  nameWithType: TestOperationState.ToTask
- uid: Responsible.TestOperationState.ToTask``1(Responsible.State.ITestOperationState{``0},Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: ToTask<T>(ITestOperationState<T>, TestInstructionExecutor, CancellationToken, string, string, int)
  href: api/Responsible.TestOperationState.html#Responsible_TestOperationState_ToTask__1_Responsible_State_ITestOperationState___0__Responsible_TestInstructionExecutor_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestOperationState.ToTask``1(Responsible.State.ITestOperationState{``0},Responsible.TestInstructionExecutor,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: ToTask(Of T)(ITestOperationState(Of T), TestInstructionExecutor, CancellationToken, String, String, Integer)
  fullName: Responsible.TestOperationState.ToTask<T>(Responsible.State.ITestOperationState<T>, Responsible.TestInstructionExecutor, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestOperationState.ToTask(Of T)(Responsible.State.ITestOperationState(Of T), Responsible.TestInstructionExecutor, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestOperationState.ToTask<T>(ITestOperationState<T>, TestInstructionExecutor, CancellationToken, string, string, int)
  nameWithType.vb: TestOperationState.ToTask(Of T)(ITestOperationState(Of T), TestInstructionExecutor, CancellationToken, String, String, Integer)
- uid: Responsible.TestOperationState.ToYieldInstruction*
  name: ToYieldInstruction
  href: api/Responsible.TestOperationState.html#Responsible_TestOperationState_ToYieldInstruction_
  commentId: Overload:Responsible.TestOperationState.ToYieldInstruction
  isSpec: "True"
  fullName: Responsible.TestOperationState.ToYieldInstruction
  nameWithType: TestOperationState.ToYieldInstruction
- uid: Responsible.TestOperationState.ToYieldInstruction``1(Responsible.State.ITestOperationState{``0},Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name: ToYieldInstruction<T>(ITestOperationState<T>, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  href: api/Responsible.TestOperationState.html#Responsible_TestOperationState_ToYieldInstruction__1_Responsible_State_ITestOperationState___0__Responsible_TestInstructionExecutor_System_Boolean_System_Threading_CancellationToken_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestOperationState.ToYieldInstruction``1(Responsible.State.ITestOperationState{``0},Responsible.TestInstructionExecutor,System.Boolean,System.Threading.CancellationToken,System.String,System.String,System.Int32)
  name.vb: ToYieldInstruction(Of T)(ITestOperationState(Of T), TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
  fullName: Responsible.TestOperationState.ToYieldInstruction<T>(Responsible.State.ITestOperationState<T>, Responsible.TestInstructionExecutor, bool, System.Threading.CancellationToken, string, string, int)
  fullName.vb: Responsible.TestOperationState.ToYieldInstruction(Of T)(Responsible.State.ITestOperationState(Of T), Responsible.TestInstructionExecutor, Boolean, System.Threading.CancellationToken, String, String, Integer)
  nameWithType: TestOperationState.ToYieldInstruction<T>(ITestOperationState<T>, TestInstructionExecutor, bool, CancellationToken, string, string, int)
  nameWithType.vb: TestOperationState.ToYieldInstruction(Of T)(ITestOperationState(Of T), TestInstructionExecutor, Boolean, CancellationToken, String, String, Integer)
- uid: Responsible.TestResponder
  name: TestResponder
  href: api/Responsible.TestResponder.html
  commentId: T:Responsible.TestResponder
  fullName: Responsible.TestResponder
  nameWithType: TestResponder
- uid: Responsible.TestResponder.BoxResult*
  name: BoxResult
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_BoxResult_
  commentId: Overload:Responsible.TestResponder.BoxResult
  isSpec: "True"
  fullName: Responsible.TestResponder.BoxResult
  nameWithType: TestResponder.BoxResult
- uid: Responsible.TestResponder.BoxResult``1(Responsible.ITestResponder{``0})
  name: BoxResult<T>(ITestResponder<T>)
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_BoxResult__1_Responsible_ITestResponder___0__
  commentId: M:Responsible.TestResponder.BoxResult``1(Responsible.ITestResponder{``0})
  name.vb: BoxResult(Of T)(ITestResponder(Of T))
  fullName: Responsible.TestResponder.BoxResult<T>(Responsible.ITestResponder<T>)
  fullName.vb: Responsible.TestResponder.BoxResult(Of T)(Responsible.ITestResponder(Of T))
  nameWithType: TestResponder.BoxResult<T>(ITestResponder<T>)
  nameWithType.vb: TestResponder.BoxResult(Of T)(ITestResponder(Of T))
- uid: Responsible.TestResponder.ExpectWithinSeconds*
  name: ExpectWithinSeconds
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_ExpectWithinSeconds_
  commentId: Overload:Responsible.TestResponder.ExpectWithinSeconds
  isSpec: "True"
  fullName: Responsible.TestResponder.ExpectWithinSeconds
  nameWithType: TestResponder.ExpectWithinSeconds
- uid: Responsible.TestResponder.ExpectWithinSeconds``1(Responsible.ITestResponder{``0},System.Double,System.String,System.String,System.Int32)
  name: ExpectWithinSeconds<T>(ITestResponder<T>, double, string, string, int)
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_ExpectWithinSeconds__1_Responsible_ITestResponder___0__System_Double_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestResponder.ExpectWithinSeconds``1(Responsible.ITestResponder{``0},System.Double,System.String,System.String,System.Int32)
  name.vb: ExpectWithinSeconds(Of T)(ITestResponder(Of T), Double, String, String, Integer)
  fullName: Responsible.TestResponder.ExpectWithinSeconds<T>(Responsible.ITestResponder<T>, double, string, string, int)
  fullName.vb: Responsible.TestResponder.ExpectWithinSeconds(Of T)(Responsible.ITestResponder(Of T), Double, String, String, Integer)
  nameWithType: TestResponder.ExpectWithinSeconds<T>(ITestResponder<T>, double, string, string, int)
  nameWithType.vb: TestResponder.ExpectWithinSeconds(Of T)(ITestResponder(Of T), Double, String, String, Integer)
- uid: Responsible.TestResponder.Optionally*
  name: Optionally
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Optionally_
  commentId: Overload:Responsible.TestResponder.Optionally
  isSpec: "True"
  fullName: Responsible.TestResponder.Optionally
  nameWithType: TestResponder.Optionally
- uid: Responsible.TestResponder.Optionally``1(Responsible.ITestResponder{``0})
  name: Optionally<T>(ITestResponder<T>)
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Optionally__1_Responsible_ITestResponder___0__
  commentId: M:Responsible.TestResponder.Optionally``1(Responsible.ITestResponder{``0})
  name.vb: Optionally(Of T)(ITestResponder(Of T))
  fullName: Responsible.TestResponder.Optionally<T>(Responsible.ITestResponder<T>)
  fullName.vb: Responsible.TestResponder.Optionally(Of T)(Responsible.ITestResponder(Of T))
  nameWithType: TestResponder.Optionally<T>(ITestResponder<T>)
  nameWithType.vb: TestResponder.Optionally(Of T)(ITestResponder(Of T))
- uid: Responsible.TestResponder.Repeatedly*
  name: Repeatedly
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Repeatedly_
  commentId: Overload:Responsible.TestResponder.Repeatedly
  isSpec: "True"
  fullName: Responsible.TestResponder.Repeatedly
  nameWithType: TestResponder.Repeatedly
- uid: Responsible.TestResponder.Repeatedly``1(Responsible.ITestResponder{``0},System.Int32,System.String,System.String,System.Int32)
  name: Repeatedly<T>(ITestResponder<T>, int, string, string, int)
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Repeatedly__1_Responsible_ITestResponder___0__System_Int32_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestResponder.Repeatedly``1(Responsible.ITestResponder{``0},System.Int32,System.String,System.String,System.Int32)
  name.vb: Repeatedly(Of T)(ITestResponder(Of T), Integer, String, String, Integer)
  fullName: Responsible.TestResponder.Repeatedly<T>(Responsible.ITestResponder<T>, int, string, string, int)
  fullName.vb: Responsible.TestResponder.Repeatedly(Of T)(Responsible.ITestResponder(Of T), Integer, String, String, Integer)
  nameWithType: TestResponder.Repeatedly<T>(ITestResponder<T>, int, string, string, int)
  nameWithType.vb: TestResponder.Repeatedly(Of T)(ITestResponder(Of T), Integer, String, String, Integer)
- uid: Responsible.TestResponder.Select*
  name: Select
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Select_
  commentId: Overload:Responsible.TestResponder.Select
  isSpec: "True"
  fullName: Responsible.TestResponder.Select
  nameWithType: TestResponder.Select
- uid: Responsible.TestResponder.Select``2(Responsible.ITestResponder{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name: Select<T1, T2>(ITestResponder<T1>, Func<T1, T2>, string, string, int)
  href: api/Responsible.TestResponder.html#Responsible_TestResponder_Select__2_Responsible_ITestResponder___0__System_Func___0___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestResponder.Select``2(Responsible.ITestResponder{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name.vb: Select(Of T1, T2)(ITestResponder(Of T1), Func(Of T1, T2), String, String, Integer)
  fullName: Responsible.TestResponder.Select<T1, T2>(Responsible.ITestResponder<T1>, System.Func<T1, T2>, string, string, int)
  fullName.vb: Responsible.TestResponder.Select(Of T1, T2)(Responsible.ITestResponder(Of T1), System.Func(Of T1, T2), String, String, Integer)
  nameWithType: TestResponder.Select<T1, T2>(ITestResponder<T1>, Func<T1, T2>, string, string, int)
  nameWithType.vb: TestResponder.Select(Of T1, T2)(ITestResponder(Of T1), Func(Of T1, T2), String, String, Integer)
- uid: Responsible.TestWaitCondition
  name: TestWaitCondition
  href: api/Responsible.TestWaitCondition.html
  commentId: T:Responsible.TestWaitCondition
  fullName: Responsible.TestWaitCondition
  nameWithType: TestWaitCondition
- uid: Responsible.TestWaitCondition.AndThen*
  name: AndThen
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_AndThen_
  commentId: Overload:Responsible.TestWaitCondition.AndThen
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.AndThen
  nameWithType: TestWaitCondition.AndThen
- uid: Responsible.TestWaitCondition.AndThen``2(Responsible.ITestWaitCondition{``0},Responsible.ITestWaitCondition{``1},System.String,System.String,System.Int32)
  name: AndThen<TFirst, TSecond>(ITestWaitCondition<TFirst>, ITestWaitCondition<TSecond>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_AndThen__2_Responsible_ITestWaitCondition___0__Responsible_ITestWaitCondition___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.AndThen``2(Responsible.ITestWaitCondition{``0},Responsible.ITestWaitCondition{``1},System.String,System.String,System.Int32)
  name.vb: AndThen(Of TFirst, TSecond)(ITestWaitCondition(Of TFirst), ITestWaitCondition(Of TSecond), String, String, Integer)
  fullName: Responsible.TestWaitCondition.AndThen<TFirst, TSecond>(Responsible.ITestWaitCondition<TFirst>, Responsible.ITestWaitCondition<TSecond>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.AndThen(Of TFirst, TSecond)(Responsible.ITestWaitCondition(Of TFirst), Responsible.ITestWaitCondition(Of TSecond), String, String, Integer)
  nameWithType: TestWaitCondition.AndThen<TFirst, TSecond>(ITestWaitCondition<TFirst>, ITestWaitCondition<TSecond>, string, string, int)
  nameWithType.vb: TestWaitCondition.AndThen(Of TFirst, TSecond)(ITestWaitCondition(Of TFirst), ITestWaitCondition(Of TSecond), String, String, Integer)
- uid: Responsible.TestWaitCondition.AndThen``2(Responsible.ITestWaitCondition{``0},System.Func{``0,Responsible.ITestWaitCondition{``1}},System.String,System.String,System.Int32)
  name: AndThen<TFirst, TSecond>(ITestWaitCondition<TFirst>, Func<TFirst, ITestWaitCondition<TSecond>>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_AndThen__2_Responsible_ITestWaitCondition___0__System_Func___0_Responsible_ITestWaitCondition___1___System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.AndThen``2(Responsible.ITestWaitCondition{``0},System.Func{``0,Responsible.ITestWaitCondition{``1}},System.String,System.String,System.Int32)
  name.vb: AndThen(Of TFirst, TSecond)(ITestWaitCondition(Of TFirst), Func(Of TFirst, ITestWaitCondition(Of TSecond)), String, String, Integer)
  fullName: Responsible.TestWaitCondition.AndThen<TFirst, TSecond>(Responsible.ITestWaitCondition<TFirst>, System.Func<TFirst, Responsible.ITestWaitCondition<TSecond>>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.AndThen(Of TFirst, TSecond)(Responsible.ITestWaitCondition(Of TFirst), System.Func(Of TFirst, Responsible.ITestWaitCondition(Of TSecond)), String, String, Integer)
  nameWithType: TestWaitCondition.AndThen<TFirst, TSecond>(ITestWaitCondition<TFirst>, Func<TFirst, ITestWaitCondition<TSecond>>, string, string, int)
  nameWithType.vb: TestWaitCondition.AndThen(Of TFirst, TSecond)(ITestWaitCondition(Of TFirst), Func(Of TFirst, ITestWaitCondition(Of TSecond)), String, String, Integer)
- uid: Responsible.TestWaitCondition.BoxResult*
  name: BoxResult
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_BoxResult_
  commentId: Overload:Responsible.TestWaitCondition.BoxResult
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.BoxResult
  nameWithType: TestWaitCondition.BoxResult
- uid: Responsible.TestWaitCondition.BoxResult``1(Responsible.ITestWaitCondition{``0})
  name: BoxResult<T>(ITestWaitCondition<T>)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_BoxResult__1_Responsible_ITestWaitCondition___0__
  commentId: M:Responsible.TestWaitCondition.BoxResult``1(Responsible.ITestWaitCondition{``0})
  name.vb: BoxResult(Of T)(ITestWaitCondition(Of T))
  fullName: Responsible.TestWaitCondition.BoxResult<T>(Responsible.ITestWaitCondition<T>)
  fullName.vb: Responsible.TestWaitCondition.BoxResult(Of T)(Responsible.ITestWaitCondition(Of T))
  nameWithType: TestWaitCondition.BoxResult<T>(ITestWaitCondition<T>)
  nameWithType.vb: TestWaitCondition.BoxResult(Of T)(ITestWaitCondition(Of T))
- uid: Responsible.TestWaitCondition.ExpectWithinSeconds*
  name: ExpectWithinSeconds
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ExpectWithinSeconds_
  commentId: Overload:Responsible.TestWaitCondition.ExpectWithinSeconds
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.ExpectWithinSeconds
  nameWithType: TestWaitCondition.ExpectWithinSeconds
- uid: Responsible.TestWaitCondition.ExpectWithinSeconds``1(Responsible.ITestWaitCondition{``0},System.Double,System.String,System.String,System.Int32)
  name: ExpectWithinSeconds<T>(ITestWaitCondition<T>, double, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ExpectWithinSeconds__1_Responsible_ITestWaitCondition___0__System_Double_System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.ExpectWithinSeconds``1(Responsible.ITestWaitCondition{``0},System.Double,System.String,System.String,System.Int32)
  name.vb: ExpectWithinSeconds(Of T)(ITestWaitCondition(Of T), Double, String, String, Integer)
  fullName: Responsible.TestWaitCondition.ExpectWithinSeconds<T>(Responsible.ITestWaitCondition<T>, double, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.ExpectWithinSeconds(Of T)(Responsible.ITestWaitCondition(Of T), Double, String, String, Integer)
  nameWithType: TestWaitCondition.ExpectWithinSeconds<T>(ITestWaitCondition<T>, double, string, string, int)
  nameWithType.vb: TestWaitCondition.ExpectWithinSeconds(Of T)(ITestWaitCondition(Of T), Double, String, String, Integer)
- uid: Responsible.TestWaitCondition.Select*
  name: Select
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_Select_
  commentId: Overload:Responsible.TestWaitCondition.Select
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.Select
  nameWithType: TestWaitCondition.Select
- uid: Responsible.TestWaitCondition.Select``2(Responsible.ITestWaitCondition{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name: Select<T1, T2>(ITestWaitCondition<T1>, Func<T1, T2>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_Select__2_Responsible_ITestWaitCondition___0__System_Func___0___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.Select``2(Responsible.ITestWaitCondition{``0},System.Func{``0,``1},System.String,System.String,System.Int32)
  name.vb: Select(Of T1, T2)(ITestWaitCondition(Of T1), Func(Of T1, T2), String, String, Integer)
  fullName: Responsible.TestWaitCondition.Select<T1, T2>(Responsible.ITestWaitCondition<T1>, System.Func<T1, T2>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.Select(Of T1, T2)(Responsible.ITestWaitCondition(Of T1), System.Func(Of T1, T2), String, String, Integer)
  nameWithType: TestWaitCondition.Select<T1, T2>(ITestWaitCondition<T1>, Func<T1, T2>, string, string, int)
  nameWithType.vb: TestWaitCondition.Select(Of T1, T2)(ITestWaitCondition(Of T1), Func(Of T1, T2), String, String, Integer)
- uid: Responsible.TestWaitCondition.ThenRespondWith*
  name: ThenRespondWith
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWith_
  commentId: Overload:Responsible.TestWaitCondition.ThenRespondWith
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.ThenRespondWith
  nameWithType: TestWaitCondition.ThenRespondWith
- uid: Responsible.TestWaitCondition.ThenRespondWithAction*
  name: ThenRespondWithAction
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWithAction_
  commentId: Overload:Responsible.TestWaitCondition.ThenRespondWithAction
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.ThenRespondWithAction
  nameWithType: TestWaitCondition.ThenRespondWithAction
- uid: Responsible.TestWaitCondition.ThenRespondWithAction``1(Responsible.ITestWaitCondition{``0},System.String,System.Action{``0},System.String,System.String,System.Int32)
  name: ThenRespondWithAction<TWait>(ITestWaitCondition<TWait>, string, Action<TWait>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWithAction__1_Responsible_ITestWaitCondition___0__System_String_System_Action___0__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.ThenRespondWithAction``1(Responsible.ITestWaitCondition{``0},System.String,System.Action{``0},System.String,System.String,System.Int32)
  name.vb: ThenRespondWithAction(Of TWait)(ITestWaitCondition(Of TWait), String, Action(Of TWait), String, String, Integer)
  fullName: Responsible.TestWaitCondition.ThenRespondWithAction<TWait>(Responsible.ITestWaitCondition<TWait>, string, System.Action<TWait>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.ThenRespondWithAction(Of TWait)(Responsible.ITestWaitCondition(Of TWait), String, System.Action(Of TWait), String, String, Integer)
  nameWithType: TestWaitCondition.ThenRespondWithAction<TWait>(ITestWaitCondition<TWait>, string, Action<TWait>, string, string, int)
  nameWithType.vb: TestWaitCondition.ThenRespondWithAction(Of TWait)(ITestWaitCondition(Of TWait), String, Action(Of TWait), String, String, Integer)
- uid: Responsible.TestWaitCondition.ThenRespondWithFunc*
  name: ThenRespondWithFunc
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWithFunc_
  commentId: Overload:Responsible.TestWaitCondition.ThenRespondWithFunc
  isSpec: "True"
  fullName: Responsible.TestWaitCondition.ThenRespondWithFunc
  nameWithType: TestWaitCondition.ThenRespondWithFunc
- uid: Responsible.TestWaitCondition.ThenRespondWithFunc``2(Responsible.ITestWaitCondition{``0},System.String,System.Func{``0,``1},System.String,System.String,System.Int32)
  name: ThenRespondWithFunc<TWait, TResult>(ITestWaitCondition<TWait>, string, Func<TWait, TResult>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWithFunc__2_Responsible_ITestWaitCondition___0__System_String_System_Func___0___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.ThenRespondWithFunc``2(Responsible.ITestWaitCondition{``0},System.String,System.Func{``0,``1},System.String,System.String,System.Int32)
  name.vb: ThenRespondWithFunc(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, Func(Of TWait, TResult), String, String, Integer)
  fullName: Responsible.TestWaitCondition.ThenRespondWithFunc<TWait, TResult>(Responsible.ITestWaitCondition<TWait>, string, System.Func<TWait, TResult>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.ThenRespondWithFunc(Of TWait, TResult)(Responsible.ITestWaitCondition(Of TWait), String, System.Func(Of TWait, TResult), String, String, Integer)
  nameWithType: TestWaitCondition.ThenRespondWithFunc<TWait, TResult>(ITestWaitCondition<TWait>, string, Func<TWait, TResult>, string, string, int)
  nameWithType.vb: TestWaitCondition.ThenRespondWithFunc(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, Func(Of TWait, TResult), String, String, Integer)
- uid: Responsible.TestWaitCondition.ThenRespondWith``2(Responsible.ITestWaitCondition{``0},System.String,Responsible.ITestInstruction{``1},System.String,System.String,System.Int32)
  name: ThenRespondWith<TWait, TResult>(ITestWaitCondition<TWait>, string, ITestInstruction<TResult>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWith__2_Responsible_ITestWaitCondition___0__System_String_Responsible_ITestInstruction___1__System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.ThenRespondWith``2(Responsible.ITestWaitCondition{``0},System.String,Responsible.ITestInstruction{``1},System.String,System.String,System.Int32)
  name.vb: ThenRespondWith(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, ITestInstruction(Of TResult), String, String, Integer)
  fullName: Responsible.TestWaitCondition.ThenRespondWith<TWait, TResult>(Responsible.ITestWaitCondition<TWait>, string, Responsible.ITestInstruction<TResult>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.ThenRespondWith(Of TWait, TResult)(Responsible.ITestWaitCondition(Of TWait), String, Responsible.ITestInstruction(Of TResult), String, String, Integer)
  nameWithType: TestWaitCondition.ThenRespondWith<TWait, TResult>(ITestWaitCondition<TWait>, string, ITestInstruction<TResult>, string, string, int)
  nameWithType.vb: TestWaitCondition.ThenRespondWith(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, ITestInstruction(Of TResult), String, String, Integer)
- uid: Responsible.TestWaitCondition.ThenRespondWith``2(Responsible.ITestWaitCondition{``0},System.String,System.Func{``0,Responsible.ITestInstruction{``1}},System.String,System.String,System.Int32)
  name: ThenRespondWith<TWait, TResult>(ITestWaitCondition<TWait>, string, Func<TWait, ITestInstruction<TResult>>, string, string, int)
  href: api/Responsible.TestWaitCondition.html#Responsible_TestWaitCondition_ThenRespondWith__2_Responsible_ITestWaitCondition___0__System_String_System_Func___0_Responsible_ITestInstruction___1___System_String_System_String_System_Int32_
  commentId: M:Responsible.TestWaitCondition.ThenRespondWith``2(Responsible.ITestWaitCondition{``0},System.String,System.Func{``0,Responsible.ITestInstruction{``1}},System.String,System.String,System.Int32)
  name.vb: ThenRespondWith(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, Func(Of TWait, ITestInstruction(Of TResult)), String, String, Integer)
  fullName: Responsible.TestWaitCondition.ThenRespondWith<TWait, TResult>(Responsible.ITestWaitCondition<TWait>, string, System.Func<TWait, Responsible.ITestInstruction<TResult>>, string, string, int)
  fullName.vb: Responsible.TestWaitCondition.ThenRespondWith(Of TWait, TResult)(Responsible.ITestWaitCondition(Of TWait), String, System.Func(Of TWait, Responsible.ITestInstruction(Of TResult)), String, String, Integer)
  nameWithType: TestWaitCondition.ThenRespondWith<TWait, TResult>(ITestWaitCondition<TWait>, string, Func<TWait, ITestInstruction<TResult>>, string, string, int)
  nameWithType.vb: TestWaitCondition.ThenRespondWith(Of TWait, TResult)(ITestWaitCondition(Of TWait), String, Func(Of TWait, ITestInstruction(Of TResult)), String, String, Integer)
- uid: Responsible.Unity
  name: Responsible.Unity
  href: api/Responsible.Unity.html
  commentId: N:Responsible.Unity
  fullName: Responsible.Unity
  nameWithType: Responsible.Unity
- uid: Responsible.Unity.TestOperationYieldInstruction`1
  name: TestOperationYieldInstruction<T>
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html
  commentId: T:Responsible.Unity.TestOperationYieldInstruction`1
  name.vb: TestOperationYieldInstruction(Of T)
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T)
  nameWithType: TestOperationYieldInstruction<T>
  nameWithType.vb: TestOperationYieldInstruction(Of T)
- uid: Responsible.Unity.TestOperationYieldInstruction`1.CompletedSuccessfully
  name: CompletedSuccessfully
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_CompletedSuccessfully
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.CompletedSuccessfully
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.CompletedSuccessfully
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).CompletedSuccessfully
  nameWithType: TestOperationYieldInstruction<T>.CompletedSuccessfully
  nameWithType.vb: TestOperationYieldInstruction(Of T).CompletedSuccessfully
- uid: Responsible.Unity.TestOperationYieldInstruction`1.CompletedSuccessfully*
  name: CompletedSuccessfully
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_CompletedSuccessfully_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.CompletedSuccessfully
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.CompletedSuccessfully
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).CompletedSuccessfully
  nameWithType: TestOperationYieldInstruction<T>.CompletedSuccessfully
  nameWithType.vb: TestOperationYieldInstruction(Of T).CompletedSuccessfully
- uid: Responsible.Unity.TestOperationYieldInstruction`1.CompletedWithError
  name: CompletedWithError
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_CompletedWithError
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.CompletedWithError
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.CompletedWithError
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).CompletedWithError
  nameWithType: TestOperationYieldInstruction<T>.CompletedWithError
  nameWithType.vb: TestOperationYieldInstruction(Of T).CompletedWithError
- uid: Responsible.Unity.TestOperationYieldInstruction`1.CompletedWithError*
  name: CompletedWithError
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_CompletedWithError_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.CompletedWithError
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.CompletedWithError
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).CompletedWithError
  nameWithType: TestOperationYieldInstruction<T>.CompletedWithError
  nameWithType.vb: TestOperationYieldInstruction(Of T).CompletedWithError
- uid: Responsible.Unity.TestOperationYieldInstruction`1.Error
  name: Error
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_Error
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.Error
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.Error
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).Error
  nameWithType: TestOperationYieldInstruction<T>.Error
  nameWithType.vb: TestOperationYieldInstruction(Of T).Error
- uid: Responsible.Unity.TestOperationYieldInstruction`1.Error*
  name: Error
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_Error_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.Error
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.Error
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).Error
  nameWithType: TestOperationYieldInstruction<T>.Error
  nameWithType.vb: TestOperationYieldInstruction(Of T).Error
- uid: Responsible.Unity.TestOperationYieldInstruction`1.Result
  name: Result
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_Result
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.Result
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.Result
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).Result
  nameWithType: TestOperationYieldInstruction<T>.Result
  nameWithType.vb: TestOperationYieldInstruction(Of T).Result
- uid: Responsible.Unity.TestOperationYieldInstruction`1.Result*
  name: Result
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_Result_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.Result
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.Result
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).Result
  nameWithType: TestOperationYieldInstruction<T>.Result
  nameWithType.vb: TestOperationYieldInstruction(Of T).Result
- uid: Responsible.Unity.TestOperationYieldInstruction`1.WasCanceled
  name: WasCanceled
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_WasCanceled
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.WasCanceled
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.WasCanceled
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).WasCanceled
  nameWithType: TestOperationYieldInstruction<T>.WasCanceled
  nameWithType.vb: TestOperationYieldInstruction(Of T).WasCanceled
- uid: Responsible.Unity.TestOperationYieldInstruction`1.WasCanceled*
  name: WasCanceled
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_WasCanceled_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.WasCanceled
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.WasCanceled
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).WasCanceled
  nameWithType: TestOperationYieldInstruction<T>.WasCanceled
  nameWithType.vb: TestOperationYieldInstruction(Of T).WasCanceled
- uid: Responsible.Unity.TestOperationYieldInstruction`1.keepWaiting
  name: keepWaiting
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_keepWaiting
  commentId: P:Responsible.Unity.TestOperationYieldInstruction`1.keepWaiting
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.keepWaiting
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).keepWaiting
  nameWithType: TestOperationYieldInstruction<T>.keepWaiting
  nameWithType.vb: TestOperationYieldInstruction(Of T).keepWaiting
- uid: Responsible.Unity.TestOperationYieldInstruction`1.keepWaiting*
  name: keepWaiting
  href: api/Responsible.Unity.TestOperationYieldInstruction-1.html#Responsible_Unity_TestOperationYieldInstruction_1_keepWaiting_
  commentId: Overload:Responsible.Unity.TestOperationYieldInstruction`1.keepWaiting
  isSpec: "True"
  fullName: Responsible.Unity.TestOperationYieldInstruction<T>.keepWaiting
  fullName.vb: Responsible.Unity.TestOperationYieldInstruction(Of T).keepWaiting
  nameWithType: TestOperationYieldInstruction<T>.keepWaiting
  nameWithType.vb: TestOperationYieldInstruction(Of T).keepWaiting
- uid: Responsible.Unity.UnhandledLogMessageException
  name: UnhandledLogMessageException
  href: api/Responsible.Unity.UnhandledLogMessageException.html
  commentId: T:Responsible.Unity.UnhandledLogMessageException
  fullName: Responsible.Unity.UnhandledLogMessageException
  nameWithType: UnhandledLogMessageException
- uid: Responsible.Unity.UnityErrorLogInterceptor
  name: UnityErrorLogInterceptor
  href: api/Responsible.Unity.UnityErrorLogInterceptor.html
  commentId: T:Responsible.Unity.UnityErrorLogInterceptor
  fullName: Responsible.Unity.UnityErrorLogInterceptor
  nameWithType: UnityErrorLogInterceptor
- uid: Responsible.Unity.UnityErrorLogInterceptor.ExpectLog(UnityEngine.LogType,System.Text.RegularExpressions.Regex)
  name: ExpectLog(LogType, Regex)
  href: api/Responsible.Unity.UnityErrorLogInterceptor.html#Responsible_Unity_UnityErrorLogInterceptor_ExpectLog_UnityEngine_LogType_System_Text_RegularExpressions_Regex_
  commentId: M:Responsible.Unity.UnityErrorLogInterceptor.ExpectLog(UnityEngine.LogType,System.Text.RegularExpressions.Regex)
  fullName: Responsible.Unity.UnityErrorLogInterceptor.ExpectLog(UnityEngine.LogType, System.Text.RegularExpressions.Regex)
  nameWithType: UnityErrorLogInterceptor.ExpectLog(LogType, Regex)
- uid: Responsible.Unity.UnityErrorLogInterceptor.ExpectLog*
  name: ExpectLog
  href: api/Responsible.Unity.UnityErrorLogInterceptor.html#Responsible_Unity_UnityErrorLogInterceptor_ExpectLog_
  commentId: Overload:Responsible.Unity.UnityErrorLogInterceptor.ExpectLog
  isSpec: "True"
  fullName: Responsible.Unity.UnityErrorLogInterceptor.ExpectLog
  nameWithType: UnityErrorLogInterceptor.ExpectLog
- uid: Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult*
  name: GetExternalResult
  href: api/Responsible.Unity.UnityErrorLogInterceptor.html#Responsible_Unity_UnityErrorLogInterceptor_GetExternalResult_
  commentId: Overload:Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult
  isSpec: "True"
  fullName: Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult
  nameWithType: UnityErrorLogInterceptor.GetExternalResult
- uid: Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult``1(System.Threading.CancellationToken)
  name: GetExternalResult<T>(CancellationToken)
  href: api/Responsible.Unity.UnityErrorLogInterceptor.html#Responsible_Unity_UnityErrorLogInterceptor_GetExternalResult__1_System_Threading_CancellationToken_
  commentId: M:Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult``1(System.Threading.CancellationToken)
  name.vb: GetExternalResult(Of T)(CancellationToken)
  fullName: Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult<T>(System.Threading.CancellationToken)
  fullName.vb: Responsible.Unity.UnityErrorLogInterceptor.GetExternalResult(Of T)(System.Threading.CancellationToken)
  nameWithType: UnityErrorLogInterceptor.GetExternalResult<T>(CancellationToken)
  nameWithType.vb: UnityErrorLogInterceptor.GetExternalResult(Of T)(CancellationToken)
- uid: Responsible.Unity.UnityFailureListener
  name: UnityFailureListener
  href: api/Responsible.Unity.UnityFailureListener.html
  commentId: T:Responsible.Unity.UnityFailureListener
  fullName: Responsible.Unity.UnityFailureListener
  nameWithType: UnityFailureListener
- uid: Responsible.Unity.UnityFailureListener.OperationFailed(System.Exception,System.String)
  name: OperationFailed(Exception, string)
  href: api/Responsible.Unity.UnityFailureListener.html#Responsible_Unity_UnityFailureListener_OperationFailed_System_Exception_System_String_
  commentId: M:Responsible.Unity.UnityFailureListener.OperationFailed(System.Exception,System.String)
  name.vb: OperationFailed(Exception, String)
  fullName: Responsible.Unity.UnityFailureListener.OperationFailed(System.Exception, string)
  fullName.vb: Responsible.Unity.UnityFailureListener.OperationFailed(System.Exception, String)
  nameWithType: UnityFailureListener.OperationFailed(Exception, string)
  nameWithType.vb: UnityFailureListener.OperationFailed(Exception, String)
- uid: Responsible.Unity.UnityFailureListener.OperationFailed*
  name: OperationFailed
  href: api/Responsible.Unity.UnityFailureListener.html#Responsible_Unity_UnityFailureListener_OperationFailed_
  commentId: Overload:Responsible.Unity.UnityFailureListener.OperationFailed
  isSpec: "True"
  fullName: Responsible.Unity.UnityFailureListener.OperationFailed
  nameWithType: UnityFailureListener.OperationFailed
- uid: Responsible.Unity.UnityTestInstructionExecutor
  name: UnityTestInstructionExecutor
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html
  commentId: T:Responsible.Unity.UnityTestInstructionExecutor
  fullName: Responsible.Unity.UnityTestInstructionExecutor
  nameWithType: UnityTestInstructionExecutor
- uid: Responsible.Unity.UnityTestInstructionExecutor.#ctor(System.Boolean,Responsible.IGlobalContextProvider)
  name: UnityTestInstructionExecutor(bool, IGlobalContextProvider)
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor__ctor_System_Boolean_Responsible_IGlobalContextProvider_
  commentId: M:Responsible.Unity.UnityTestInstructionExecutor.#ctor(System.Boolean,Responsible.IGlobalContextProvider)
  name.vb: New(Boolean, IGlobalContextProvider)
  fullName: Responsible.Unity.UnityTestInstructionExecutor.UnityTestInstructionExecutor(bool, Responsible.IGlobalContextProvider)
  fullName.vb: Responsible.Unity.UnityTestInstructionExecutor.New(Boolean, Responsible.IGlobalContextProvider)
  nameWithType: UnityTestInstructionExecutor.UnityTestInstructionExecutor(bool, IGlobalContextProvider)
  nameWithType.vb: UnityTestInstructionExecutor.New(Boolean, IGlobalContextProvider)
- uid: Responsible.Unity.UnityTestInstructionExecutor.#ctor*
  name: UnityTestInstructionExecutor
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor__ctor_
  commentId: Overload:Responsible.Unity.UnityTestInstructionExecutor.#ctor
  isSpec: "True"
  name.vb: New
  fullName: Responsible.Unity.UnityTestInstructionExecutor.UnityTestInstructionExecutor
  fullName.vb: Responsible.Unity.UnityTestInstructionExecutor.New
  nameWithType: UnityTestInstructionExecutor.UnityTestInstructionExecutor
  nameWithType.vb: UnityTestInstructionExecutor.New
- uid: Responsible.Unity.UnityTestInstructionExecutor.Dispose
  name: Dispose()
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor_Dispose
  commentId: M:Responsible.Unity.UnityTestInstructionExecutor.Dispose
  fullName: Responsible.Unity.UnityTestInstructionExecutor.Dispose()
  nameWithType: UnityTestInstructionExecutor.Dispose()
- uid: Responsible.Unity.UnityTestInstructionExecutor.Dispose*
  name: Dispose
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor_Dispose_
  commentId: Overload:Responsible.Unity.UnityTestInstructionExecutor.Dispose
  isSpec: "True"
  fullName: Responsible.Unity.UnityTestInstructionExecutor.Dispose
  nameWithType: UnityTestInstructionExecutor.Dispose
- uid: Responsible.Unity.UnityTestInstructionExecutor.ExpectLog(UnityEngine.LogType,System.Text.RegularExpressions.Regex)
  name: ExpectLog(LogType, Regex)
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor_ExpectLog_UnityEngine_LogType_System_Text_RegularExpressions_Regex_
  commentId: M:Responsible.Unity.UnityTestInstructionExecutor.ExpectLog(UnityEngine.LogType,System.Text.RegularExpressions.Regex)
  fullName: Responsible.Unity.UnityTestInstructionExecutor.ExpectLog(UnityEngine.LogType, System.Text.RegularExpressions.Regex)
  nameWithType: UnityTestInstructionExecutor.ExpectLog(LogType, Regex)
- uid: Responsible.Unity.UnityTestInstructionExecutor.ExpectLog*
  name: ExpectLog
  href: api/Responsible.Unity.UnityTestInstructionExecutor.html#Responsible_Unity_UnityTestInstructionExecutor_ExpectLog_
  commentId: Overload:Responsible.Unity.UnityTestInstructionExecutor.ExpectLog
  isSpec: "True"
  fullName: Responsible.Unity.UnityTestInstructionExecutor.ExpectLog
  nameWithType: UnityTestInstructionExecutor.ExpectLog
- uid: Responsible.Unity.UnityTestScheduler
  name: UnityTestScheduler
  href: api/Responsible.Unity.UnityTestScheduler.html
  commentId: T:Responsible.Unity.UnityTestScheduler
  fullName: Responsible.Unity.UnityTestScheduler
  nameWithType: UnityTestScheduler
- uid: Responsible.Unity.UnityTestScheduler.Create
  name: Create()
  href: api/Responsible.Unity.UnityTestScheduler.html#Responsible_Unity_UnityTestScheduler_Create
  commentId: M:Responsible.Unity.UnityTestScheduler.Create
  fullName: Responsible.Unity.UnityTestScheduler.Create()
  nameWithType: UnityTestScheduler.Create()
- uid: Responsible.Unity.UnityTestScheduler.Create*
  name: Create
  href: api/Responsible.Unity.UnityTestScheduler.html#Responsible_Unity_UnityTestScheduler_Create_
  commentId: Overload:Responsible.Unity.UnityTestScheduler.Create
  isSpec: "True"
  fullName: Responsible.Unity.UnityTestScheduler.Create
  nameWithType: UnityTestScheduler.Create
- uid: Responsible.Unity.UnityTestScheduler.Dispose
  name: Dispose()
  href: api/Responsible.Unity.UnityTestScheduler.html#Responsible_Unity_UnityTestScheduler_Dispose
  commentId: M:Responsible.Unity.UnityTestScheduler.Dispose
  fullName: Responsible.Unity.UnityTestScheduler.Dispose()
  nameWithType: UnityTestScheduler.Dispose()
- uid: Responsible.Unity.UnityTestScheduler.Dispose*
  name: Dispose
  href: api/Responsible.Unity.UnityTestScheduler.html#Responsible_Unity_UnityTestScheduler_Dispose_
  commentId: Overload:Responsible.Unity.UnityTestScheduler.Dispose
  isSpec: "True"
  fullName: Responsible.Unity.UnityTestScheduler.Dispose
  nameWithType: UnityTestScheduler.Dispose
- uid: Responsible.Utilities
  name: Responsible.Utilities
  href: api/Responsible.Utilities.html
  commentId: N:Responsible.Utilities
  fullName: Responsible.Utilities
  nameWithType: Responsible.Utilities
- uid: Responsible.Utilities.IMultipleTaskAwaiter`1
  name: IMultipleTaskAwaiter<T>
  href: api/Responsible.Utilities.IMultipleTaskAwaiter-1.html
  commentId: T:Responsible.Utilities.IMultipleTaskAwaiter`1
  name.vb: IMultipleTaskAwaiter(Of T)
  fullName: Responsible.Utilities.IMultipleTaskAwaiter<T>
  fullName.vb: Responsible.Utilities.IMultipleTaskAwaiter(Of T)
  nameWithType: IMultipleTaskAwaiter<T>
  nameWithType.vb: IMultipleTaskAwaiter(Of T)
- uid: Responsible.Utilities.IMultipleTaskAwaiter`1.AwaitNext
  name: AwaitNext()
  href: api/Responsible.Utilities.IMultipleTaskAwaiter-1.html#Responsible_Utilities_IMultipleTaskAwaiter_1_AwaitNext
  commentId: M:Responsible.Utilities.IMultipleTaskAwaiter`1.AwaitNext
  fullName: Responsible.Utilities.IMultipleTaskAwaiter<T>.AwaitNext()
  fullName.vb: Responsible.Utilities.IMultipleTaskAwaiter(Of T).AwaitNext()
  nameWithType: IMultipleTaskAwaiter<T>.AwaitNext()
  nameWithType.vb: IMultipleTaskAwaiter(Of T).AwaitNext()
- uid: Responsible.Utilities.IMultipleTaskAwaiter`1.AwaitNext*
  name: AwaitNext
  href: api/Responsible.Utilities.IMultipleTaskAwaiter-1.html#Responsible_Utilities_IMultipleTaskAwaiter_1_AwaitNext_
  commentId: Overload:Responsible.Utilities.IMultipleTaskAwaiter`1.AwaitNext
  isSpec: "True"
  fullName: Responsible.Utilities.IMultipleTaskAwaiter<T>.AwaitNext
  fullName.vb: Responsible.Utilities.IMultipleTaskAwaiter(Of T).AwaitNext
  nameWithType: IMultipleTaskAwaiter<T>.AwaitNext
  nameWithType.vb: IMultipleTaskAwaiter(Of T).AwaitNext
- uid: Responsible.Utilities.IMultipleTaskAwaiter`1.HasNext
  name: HasNext
  href: api/Responsible.Utilities.IMultipleTaskAwaiter-1.html#Responsible_Utilities_IMultipleTaskAwaiter_1_HasNext
  commentId: P:Responsible.Utilities.IMultipleTaskAwaiter`1.HasNext
  fullName: Responsible.Utilities.IMultipleTaskAwaiter<T>.HasNext
  fullName.vb: Responsible.Utilities.IMultipleTaskAwaiter(Of T).HasNext
  nameWithType: IMultipleTaskAwaiter<T>.HasNext
  nameWithType.vb: IMultipleTaskAwaiter(Of T).HasNext
- uid: Responsible.Utilities.IMultipleTaskAwaiter`1.HasNext*
  name: HasNext
  href: api/Responsible.Utilities.IMultipleTaskAwaiter-1.html#Responsible_Utilities_IMultipleTaskAwaiter_1_HasNext_
  commentId: Overload:Responsible.Utilities.IMultipleTaskAwaiter`1.HasNext
  isSpec: "True"
  fullName: Responsible.Utilities.IMultipleTaskAwaiter<T>.HasNext
  fullName.vb: Responsible.Utilities.IMultipleTaskAwaiter(Of T).HasNext
  nameWithType: IMultipleTaskAwaiter<T>.HasNext
  nameWithType.vb: IMultipleTaskAwaiter(Of T).HasNext
- uid: Responsible.Utilities.IMultipleTaskSource`1
  name: IMultipleTaskSource<T>
  href: api/Responsible.Utilities.IMultipleTaskSource-1.html
  commentId: T:Responsible.Utilities.IMultipleTaskSource`1
  name.vb: IMultipleTaskSource(Of T)
  fullName: Responsible.Utilities.IMultipleTaskSource<T>
  fullName.vb: Responsible.Utilities.IMultipleTaskSource(Of T)
  nameWithType: IMultipleTaskSource<T>
  nameWithType.vb: IMultipleTaskSource(Of T)
- uid: Responsible.Utilities.IMultipleTaskSource`1.Start(System.Threading.CancellationToken)
  name: Start(CancellationToken)
  href: api/Responsible.Utilities.IMultipleTaskSource-1.html#Responsible_Utilities_IMultipleTaskSource_1_Start_System_Threading_CancellationToken_
  commentId: M:Responsible.Utilities.IMultipleTaskSource`1.Start(System.Threading.CancellationToken)
  fullName: Responsible.Utilities.IMultipleTaskSource<T>.Start(System.Threading.CancellationToken)
  fullName.vb: Responsible.Utilities.IMultipleTaskSource(Of T).Start(System.Threading.CancellationToken)
  nameWithType: IMultipleTaskSource<T>.Start(CancellationToken)
  nameWithType.vb: IMultipleTaskSource(Of T).Start(CancellationToken)
- uid: Responsible.Utilities.IMultipleTaskSource`1.Start*
  name: Start
  href: api/Responsible.Utilities.IMultipleTaskSource-1.html#Responsible_Utilities_IMultipleTaskSource_1_Start_
  commentId: Overload:Responsible.Utilities.IMultipleTaskSource`1.Start
  isSpec: "True"
  fullName: Responsible.Utilities.IMultipleTaskSource<T>.Start
  fullName.vb: Responsible.Utilities.IMultipleTaskSource(Of T).Start
  nameWithType: IMultipleTaskSource<T>.Start
  nameWithType.vb: IMultipleTaskSource(Of T).Start
- uid: Responsible.Utilities.IndentedStringBuilder`1
  name: IndentedStringBuilder<T>
  href: api/Responsible.Utilities.IndentedStringBuilder-1.html
  commentId: T:Responsible.Utilities.IndentedStringBuilder`1
  name.vb: IndentedStringBuilder(Of T)
  fullName: Responsible.Utilities.IndentedStringBuilder<T>
  fullName.vb: Responsible.Utilities.IndentedStringBuilder(Of T)
  nameWithType: IndentedStringBuilder<T>
  nameWithType.vb: IndentedStringBuilder(Of T)
- uid: Responsible.Utilities.IndentedStringBuilder`1.ToString
  name: ToString()
  href: api/Responsible.Utilities.IndentedStringBuilder-1.html#Responsible_Utilities_IndentedStringBuilder_1_ToString
  commentId: M:Responsible.Utilities.IndentedStringBuilder`1.ToString
  fullName: Responsible.Utilities.IndentedStringBuilder<T>.ToString()
  fullName.vb: Responsible.Utilities.IndentedStringBuilder(Of T).ToString()
  nameWithType: IndentedStringBuilder<T>.ToString()
  nameWithType.vb: IndentedStringBuilder(Of T).ToString()
- uid: Responsible.Utilities.IndentedStringBuilder`1.ToString*
  name: ToString
  href: api/Responsible.Utilities.IndentedStringBuilder-1.html#Responsible_Utilities_IndentedStringBuilder_1_ToString_
  commentId: Overload:Responsible.Utilities.IndentedStringBuilder`1.ToString
  isSpec: "True"
  fullName: Responsible.Utilities.IndentedStringBuilder<T>.ToString
  fullName.vb: Responsible.Utilities.IndentedStringBuilder(Of T).ToString
  nameWithType: IndentedStringBuilder<T>.ToString
  nameWithType.vb: IndentedStringBuilder(Of T).ToString
- uid: Responsible.Utilities.RetryingPoller
  name: RetryingPoller
  href: api/Responsible.Utilities.RetryingPoller.html
  commentId: T:Responsible.Utilities.RetryingPoller
  fullName: Responsible.Utilities.RetryingPoller
  nameWithType: RetryingPoller
- uid: Responsible.Utilities.RetryingPoller.Poll
  name: Poll()
  href: api/Responsible.Utilities.RetryingPoller.html#Responsible_Utilities_RetryingPoller_Poll
  commentId: M:Responsible.Utilities.RetryingPoller.Poll
  fullName: Responsible.Utilities.RetryingPoller.Poll()
  nameWithType: RetryingPoller.Poll()
- uid: Responsible.Utilities.RetryingPoller.Poll*
  name: Poll
  href: api/Responsible.Utilities.RetryingPoller.html#Responsible_Utilities_RetryingPoller_Poll_
  commentId: Overload:Responsible.Utilities.RetryingPoller.Poll
  isSpec: "True"
  fullName: Responsible.Utilities.RetryingPoller.Poll
  nameWithType: RetryingPoller.Poll
- uid: Responsible.Utilities.RetryingPoller.RegisterPollCallback(System.Action)
  name: RegisterPollCallback(Action)
  href: api/Responsible.Utilities.RetryingPoller.html#Responsible_Utilities_RetryingPoller_RegisterPollCallback_System_Action_
  commentId: M:Responsible.Utilities.RetryingPoller.RegisterPollCallback(System.Action)
  fullName: Responsible.Utilities.RetryingPoller.RegisterPollCallback(System.Action)
  nameWithType: RetryingPoller.RegisterPollCallback(Action)
- uid: Responsible.Utilities.RetryingPoller.RegisterPollCallback*
  name: RegisterPollCallback
  href: api/Responsible.Utilities.RetryingPoller.html#Responsible_Utilities_RetryingPoller_RegisterPollCallback_
  commentId: Overload:Responsible.Utilities.RetryingPoller.RegisterPollCallback
  isSpec: "True"
  fullName: Responsible.Utilities.RetryingPoller.RegisterPollCallback
  nameWithType: RetryingPoller.RegisterPollCallback
